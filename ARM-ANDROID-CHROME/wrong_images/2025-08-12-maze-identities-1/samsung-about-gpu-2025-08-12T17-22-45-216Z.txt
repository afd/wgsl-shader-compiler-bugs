Graphics Feature Status
=======================
*   Canvas: Hardware accelerated
*   Direct Rendering Display Compositor: Enabled
*   Compositing: Hardware accelerated
*   Multiple Raster Threads: Disabled
*   OpenGL: Enabled
*   Rasterization: Hardware accelerated
*   Raw Draw: Disabled
*   Skia Graphite: Disabled
*   Surface Control: Enabled
*   TreesInViz: Disabled
*   Video Decode: Hardware accelerated
*   Video Encode: Hardware accelerated
*   Vulkan: Disabled
*   WebGL: Hardware accelerated
*   WebGL2: Hardware accelerated
*   WebGPU: Hardware accelerated
*   WebNN: Disabled

Version Information
===================
Data exported              : 2025-08-12T17:22:31.147Z
Chrome version             : Chrome/139.0.7258.62
Operating system           : Android 14
Software rendering list URL: https://chromium.googlesource.com/chromium/src/+/9ecdc2077ce88e6c6cfed8e7a61df7ada8282bee/gpu/config/software_rendering_list.json
Driver bug list URL        : https://chromium.googlesource.com/chromium/src/+/9ecdc2077ce88e6c6cfed8e7a61df7ada8282bee/gpu/config/gpu_driver_bug_list.json
ANGLE commit id            : 0145c376fadd
2D graphics backend        : Skia/139 cbc694239b06ecf694676aba22d5263dbc23ee5e
Command Line               : --use-mobile-user-agent --top-controls-show-threshold=0.5 --top-controls-hide-threshold=0.5 --use-mobile-user-agent --enable-viewport --validate-input-event-stream --enable-longpress-drag-selection --touch-selection-strategy=direction --disable-composited-antialiasing --enable-dom-distiller --flag-switches-begin --flag-switches-end --top-controls-show-threshold=0.5 --top-controls-hide-threshold=0.5 --top-controls-show-threshold=0.5 --top-controls-hide-threshold=0.5 --top-controls-show-threshold=0.5 --top-controls-hide-threshold=0.5

Driver Information
==================
Initialization time             : 158
In-process GPU                  : false
Skia Backend                    : GaneshGL
Passthrough Command Decoder     : false
Sandboxed                       : false
GPU0                            : VENDOR= 0x0000 [ARM], DEVICE=0x0000 [Mali-G52 MC2], DRIVER_VENDOR=ARM, DRIVER_VERSION=32.1.01eac0 *ACTIVE*
Optimus                         : false
AMD switchable                  : false
Pixel shader version            : 3.20
Vertex shader version           : 3.20
Max. MSAA samples               : 4
Machine model name              : SM-A065F
Machine model version           : 
GL implementation parts         : (gl=egl-gles2,angle=none)
Display type                    : DEFAULT
GL_VENDOR                       : ARM
GL_RENDERER                     : Mali-G52 MC2
GL_VERSION                      : OpenGL ES 3.2 v1.r32p1-01eac0.fc49d6bd800ecb1492a1f77284a4d178
GL_EXTENSIONS                   : GL_EXT_debug_marker GL_ARM_rgba8 GL_ARM_mali_shader_binary GL_OES_depth24 GL_OES_depth_texture GL_OES_depth_texture_cube_map GL_OES_packed_depth_stencil GL_OES_rgb8_rgba8 GL_EXT_read_format_bgra GL_OES_compressed_paletted_texture GL_OES_compressed_ETC1_RGB8_texture GL_OES_standard_derivatives GL_OES_EGL_image GL_OES_EGL_image_external GL_OES_EGL_image_external_essl3 GL_OES_EGL_sync GL_OES_texture_npot GL_OES_vertex_half_float GL_OES_required_internalformat GL_OES_vertex_array_object GL_OES_mapbuffer GL_EXT_texture_format_BGRA8888 GL_EXT_texture_rg GL_EXT_texture_type_2_10_10_10_REV GL_OES_fbo_render_mipmap GL_OES_element_index_uint GL_EXT_shadow_samplers GL_OES_texture_compression_astc GL_KHR_texture_compression_astc_ldr GL_KHR_texture_compression_astc_hdr GL_KHR_texture_compression_astc_sliced_3d GL_EXT_texture_compression_astc_decode_mode GL_EXT_texture_compression_astc_decode_mode_rgb9e5 GL_KHR_debug GL_EXT_occlusion_query_boolean GL_EXT_disjoint_timer_query GL_EXT_blend_minmax GL_EXT_discard_framebuffer GL_OES_get_program_binary GL_OES_texture_3D GL_EXT_texture_storage GL_EXT_multisampled_render_to_texture GL_EXT_multisampled_render_to_texture2 GL_OES_surfaceless_context GL_OES_texture_stencil8 GL_EXT_shader_pixel_local_storage GL_ARM_shader_framebuffer_fetch GL_ARM_shader_framebuffer_fetch_depth_stencil GL_ARM_mali_program_binary GL_EXT_sRGB GL_EXT_sRGB_write_control GL_EXT_texture_sRGB_decode GL_EXT_texture_sRGB_R8 GL_EXT_texture_sRGB_RG8 GL_KHR_blend_equation_advanced GL_KHR_blend_equation_advanced_coherent GL_OES_texture_storage_multisample_2d_array GL_OES_shader_image_atomic GL_EXT_robustness GL_EXT_draw_buffers_indexed GL_OES_draw_buffers_indexed GL_EXT_texture_border_clamp GL_OES_texture_border_clamp GL_EXT_texture_cube_map_array GL_OES_texture_cube_map_array GL_OES_sample_variables GL_OES_sample_shading GL_OES_shader_multisample_interpolation GL_EXT_shader_io_blocks GL_OES_shader_io_blocks GL_EXT_tessellation_shader GL_OES_tessellation_shader GL_EXT_primitive_bounding_box GL_OES_primitive_bounding_box GL_EXT_geometry_shader GL_OES_geometry_shader GL_ANDROID_extension_pack_es31a GL_EXT_gpu_shader5 GL_OES_gpu_shader5 GL_EXT_texture_buffer GL_OES_texture_buffer GL_EXT_copy_image GL_OES_copy_image GL_EXT_shader_non_constant_global_initializers GL_EXT_color_buffer_half_float GL_EXT_unpack_subimage GL_EXT_color_buffer_float GL_EXT_YUV_target GL_OVR_multiview GL_OVR_multiview2 GL_OVR_multiview_multisampled_render_to_texture GL_KHR_robustness GL_KHR_robust_buffer_access_behavior GL_EXT_draw_elements_base_vertex GL_OES_draw_elements_base_vertex GL_EXT_protected_textures GL_EXT_buffer_storage GL_EXT_external_buffer GL_EXT_EGL_image_array GL_EXT_texture_filter_anisotropic GL_ARM_texture_unnormalized_coordinates GL_EXT_shader_framebuffer_fetch
Disabled Extensions             : GL_KHR_blend_equation_advanced GL_KHR_blend_equation_advanced_coherent
Disabled WebGL Extensions       : 
Window system binding vendor    : 
Window system binding version   : 
Window system binding extensions: 
Direct rendering version        : unknown
Reset notification strategy     : 0x8252
GPU process crash count         : 0
gfx::BufferFormats supported for allocation and texturing: R_8: not supported,  R_16: not supported,  RG_88: not supported,  RG_1616: not supported,  BGR_565: not supported,  RGBA_4444: not supported,  RGBX_8888: not supported,  RGBA_8888: not supported,  BGRX_8888: not supported,  BGRA_1010102: not supported,  RGBA_1010102: not supported,  BGRA_8888: not supported,  RGBA_F16: not supported,  YVU_420: not supported,  YUV_420_BIPLANAR: not supported,  YUVA_420_TRIPLANAR: not supported,  P010: not supported

Driver Bug Workarounds
======================
*   disable_program_caching_for_transform_feedback
*   dont_delete_source_texture_for_egl_image
*   force_enable_color_buffer_float_except_rgb32f
*   max_msaa_sample_count_4
*   remove_dynamic_indexing_of_swizzled_vector
*   use_virtualized_gl_contexts
*   webgl_or_caps_max_texture_size_limit_4096
*   disabled_extension_GL_KHR_blend_equation_advanced
*   disabled_extension_GL_KHR_blend_equation_advanced_coherent

Problems Detected
=================
*   Limit max texure size to 4096 on all of Android
    Applied Workarounds: webgl_or_caps_max_texture_size_limit_4096

*   Disable KHR_blend_equation_advanced until cc shaders are updated:
    (http://crbug.com/661715)
    Applied Workarounds: disable(GL_KHR_blend_equation_advanced),
        disable(GL_KHR_blend_equation_advanced_coherent)

*   The Mali-Gxx driver does not guarantee flush ordering:
    (http://crbug.com/678508)
    Applied Workarounds: use_virtualized_gl_contexts

*   Limit MSAA to 4x on Android devices:
    (http://crbug.com/797243)
    Applied Workarounds: max_msaa_sample_count_4

*   Program binaries don't contain transform feedback varyings on Mali GPUs:
    (http://crbug.com/961950)
    Applied Workarounds: disable_program_caching_for_transform_feedback

*   Remove dynamic indexing for swizzled vectors on Android:
    (http://crbug.com/709351)
    Applied Workarounds: remove_dynamic_indexing_of_swizzled_vector

*   Some drivers seem to require as to use original texture whenever possible:
    (http://crbug.com/1052114), (http://crbug.com/1117370)
    Applied Workarounds: dont_delete_source_texture_for_egl_image

*   Always assume float formats are renderable on Android except RGB32F:
    (http://crbug.com/1127387)
    Applied Workarounds: force_enable_color_buffer_float_except_rgb32f

Dawn Info
=========

<Unknown GPU>  OpenGLES backend - Mali-G52 MC2 (Compatibility Mode)
-------------------------------------------------------------------

[WebGPU Status]
---------------
*   Available

[Adapter Supported Features]
----------------------------
*   texture-compression-etc2
*   texture-compression-astc
*   texture-compression-astc-sliced-3d
*   dawn-internal-usages
*   dawn-native
*   implicit-device-synchronization
*   dawn-format-capabilities
*   shared-texture-memory-a-hardware-buffer
*   shared-fence-sync-fd
*   shared-fence-egl-sync

[Enabled Toggle Names]
----------------------
*   lazy_clear_resource_on_first_use: 
    (https://crbug.com/dawn/145):
    Clears resource to zero on first usage. This initializes the resource so
    that no dirty bits from recycled memory is present in the new resource.

*   flush_before_client_wait_sync: 
    (https://crbug.com/dawn/633):
    Call glFlush before glClientWaitSync to work around bugs in the latter

*   disallow_spirv: 
    (https://crbug.com/1214923):
    Disallow usage of SPIR-V completely so that only WGSL is used for shader
    modules. This is useful to prevent a Chromium renderer process from
    successfully sending SPIR-V code to be compiled in the GPU process.

*   use_placeholder_fragment_in_vertex_only_pipeline: 
    (https://crbug.com/dawn/136):
    Use a placeholder empty fragment shader in vertex only render pipeline.
    This toggle must be enabled for OpenGL ES backend, the Vulkan Backend, and
    serves as a workaround by default enabled on some Metal devices with Intel
    GPU to ensure the depth result is correct.

*   timestamp_quantization: 
    (https://crbug.com/dawn/1800):
    Enable timestamp queries quantization to reduce the precision of timers
    that can be created with timestamp queries.

*   use_blit_for_buffer_to_stencil_texture_copy: 
    (https://crbug.com/dawn/1389):
    Use a blit instead of a copy command to copy buffer data to the stencil
    aspect of a texture. Works around an issue where stencil writes by copy
    commands are not visible to a render or compute pass.

*   use_blit_for_depth16unorm_texture_to_buffer_copy: 
    (https://crbug.com/dawn/1782):
    Use a blit instead of a copy command to copy depth aspect of a texture to
    a buffer.Workaround for OpenGL and OpenGLES.

*   use_blit_for_depth32float_texture_to_buffer_copy: 
    (https://crbug.com/dawn/1782):
    Use a blit instead of a copy command to copy depth aspect of a texture to
    a buffer.Workaround for OpenGLES.

*   use_blit_for_stencil_texture_to_buffer_copy: 
    (https://crbug.com/dawn/1782):
    Use a blit instead of a copy command to copy stencil aspect of a texture
    to a buffer.Workaround for OpenGLES.

*   use_blit_for_snorm_texture_to_buffer_copy: 
    (https://crbug.com/dawn/1781):
    Use a blit instead of a copy command to copy snorm texture to a
    buffer.Workaround for OpenGLES.

*   use_blit_for_rgb9e5ufloat_texture_copy: 
    (https://crbug.com/dawn/2079):
    Use a blit instead of a copy command to copy rgb9e5ufloat texture to a
    texture or a buffer.Workaround for OpenGLES.

*   use_t2b2t_for_srgb_texture_copy: 
    (https://crbug.com/dawn/2362):
    Use T2B and B2T copies to emulate a T2T copy between sRGB and non-sRGB
    textures.Workaround for OpenGLES.

*   enable_integer_range_analysis_in_robustness: 
    (https://crbug.com/348701956):
    Compute the range of the index with Integer Range Analysis in the
    robustness transform and skip doing index clamping when the out of bound
    access cannot happen.

[WebGPU Required Toggles - enabled]
-----------------------------------
*   disallow_spirv: 
    (https://crbug.com/1214923):
    Disallow usage of SPIR-V completely so that only WGSL is used for shader
    modules. This is useful to prevent a Chromium renderer process from
    successfully sending SPIR-V code to be compiled in the GPU process.

*   timestamp_quantization: 
    (https://crbug.com/dawn/1800):
    Enable timestamp queries quantization to reduce the precision of timers
    that can be created with timestamp queries.

<Integrated GPU>  Vulkan backend - Mali-G52 MC2
-----------------------------------------------

[WebGPU Status]
---------------
*   Available

[Adapter Supported Features]
----------------------------
*   depth32float-stencil8
*   timestamp-query
*   texture-compression-etc2
*   texture-compression-astc
*   texture-compression-astc-sliced-3d
*   indirect-first-instance
*   shader-f16
*   rg11b10ufloat-renderable
*   bgra8unorm-storage
*   float32filterable
*   subgroups
*   core-features-and-limits
*   dawn-internal-usages
*   dawn-multi-planar-formats
*   dawn-native
*   implicit-device-synchronization
*   transient-attachments
*   unorm16texture-formats
*   snorm16texture-formats
*   adapter-properties-memory-heaps
*   adapter-properties-vk
*   dawn-format-capabilities
*   dawn-drm-format-capabilities
*   norm16texture-formats
*   shared-texture-memory-a-hardware-buffer
*   shared-texture-memory-dma-buf
*   shared-texture-memory-opaque-fd
*   shared-fence-sync-fd
*   dawn-load-resolve-texture
*   flexible-texture-views

[Enabled Toggle Names]
----------------------
*   lazy_clear_resource_on_first_use: 
    (https://crbug.com/dawn/145):
    Clears resource to zero on first usage. This initializes the resource so
    that no dirty bits from recycled memory is present in the new resource.

*   use_temporary_buffer_in_texture_to_texture_copy: 
    (https://crbug.com/dawn/42):
    Split texture-to-texture copy into two copies: copy from source texture
    into a temporary buffer, and copy from the temporary buffer into the
    destination texture when copying between compressed textures that don't
    have block-aligned sizes. This workaround is enabled by default on all
    Vulkan drivers to solve an issue in the Vulkan SPEC about the
    texture-to-texture copies with compressed formats. See #1005
    (https://github.com/KhronosGroup/Vulkan-Docs/issues/1005) for more
    details.

*   vulkan_use_d32s8: 
    (https://crbug.com/dawn/286):
    Vulkan mandates support of either D32_FLOAT_S8 or D24_UNORM_S8. When
    available the backend will use D32S8 (toggle to on) but setting the toggle
    to off will make it use the D24S8 format when possible.

*   vulkan_use_s8: 
    (https://crbug.com/dawn/666):
    Vulkan has a pure stencil8 format but it is not universally available.
    When this toggle is on, the backend will use S8 for the stencil8 format,
    otherwise it will fallback to D32S8 or D24S8.

*   disallow_spirv: 
    (https://crbug.com/1214923):
    Disallow usage of SPIR-V completely so that only WGSL is used for shader
    modules. This is useful to prevent a Chromium renderer process from
    successfully sending SPIR-V code to be compiled in the GPU process.

*   use_placeholder_fragment_in_vertex_only_pipeline: 
    (https://crbug.com/dawn/136):
    Use a placeholder empty fragment shader in vertex only render pipeline.
    This toggle must be enabled for OpenGL ES backend, the Vulkan Backend, and
    serves as a workaround by default enabled on some Metal devices with Intel
    GPU to ensure the depth result is correct.

*   timestamp_quantization: 
    (https://crbug.com/dawn/1800):
    Enable timestamp queries quantization to reduce the precision of timers
    that can be created with timestamp queries.

*   resolve_multiple_attachments_in_separate_passes: 
    (https://crbug.com/dawn/1550):
    When multiple MSAA attachments are used in a render pass, splits any
    resolve steps into a separate render pass per resolve target. This
    workaround is enabled by default on ARM Mali drivers.

*   polyfill_packed_4x8_dot_product: 
    (https://crbug.com/tint/1497):
    Always use the polyfill version of dot4I8Packed() and dot4U8Packed().

*   polyfill_pack_unpack_4x8_norm: 
    (https://crbug.com/379551588):
    Always use the polyfill version of pack4x8snorm, pack4x8unorm,
    unpack4x8snorm, unpack4x8unorm.

*   vulkan_use_storage_input_output_16: 
    (https://crbug.com/tint/2161):
    Use the StorageInputOutput16 SPIR-V capability for f16 shader IO types
    when the device supports it.

*   vulkan_direct_variable_access_transform_handle: 
    (https://crbug.com/387000529):
    Transform handles using direct variable access.

*   enable_integer_range_analysis_in_robustness: 
    (https://crbug.com/348701956):
    Compute the range of the index with Integer Range Analysis in the
    robustness transform and skip doing index clamping when the out of bound
    access cannot happen.

[WebGPU Required Toggles - enabled]
-----------------------------------
*   disallow_spirv: 
    (https://crbug.com/1214923):
    Disallow usage of SPIR-V completely so that only WGSL is used for shader
    modules. This is useful to prevent a Chromium renderer process from
    successfully sending SPIR-V code to be compiled in the GPU process.

*   timestamp_quantization: 
    (https://crbug.com/dawn/1800):
    Enable timestamp queries quantization to reduce the precision of timers
    that can be created with timestamp queries.

Compositor Information
======================
Tile Update Mode: One-copy
Partial Raster  : Enabled

GpuMemoryBuffers Status
=======================
R_8               : Software only
R_16              : Software only
RG_88             : Software only
RG_1616           : Software only
BGR_565           : GPU_READ, SCANOUT
RGBA_4444         : Software only
RGBX_8888         : GPU_READ, SCANOUT
RGBA_8888         : GPU_READ, SCANOUT
BGRX_8888         : Software only
BGRA_1010102      : Software only
RGBA_1010102      : Software only
BGRA_8888         : Software only
RGBA_F16          : Software only
YVU_420           : Software only
YUV_420_BIPLANAR  : Software only
YUVA_420_TRIPLANAR: Software only
P010              : Software only

Display(s) Information
======================
Info                          : Display[0] bounds=[0,0 385x854], workarea=[0,0 385x854], scale=1.875, rotation=0, panel_rotation=0 external detected
Color space (all)             : {primaries:BT709, transfer:SRGB, matrix:RGB, range:FULL}
Buffer format (all)           : RGBA_8888
Color volume                  : {name:'srgb', r:[0.6400, 0.3300], g:[0.3000, 0.6000], b:[0.1500, 0.0600], w:[0.3127, 0.3290]}
SDR white level in nits       : 203
HDR relative maximum luminance: 1
Bits per color component      : 8
Bits per pixel                : 24

Video Acceleration Information
==============================
Decoding                      : 
Decode h264 baseline          : 64x64 to 2560x1440 pixels
Decode h264 baseline          : 64x64 to 1440x2560 pixels
Decode h264 baseline          : 64x64 to 2048x1088 pixels (encrypted)
Decode h264 baseline          : 64x64 to 1088x2048 pixels (encrypted)
Decode h264 baseline          : 2x2 to 1920x1088 pixels (encrypted)
Decode h264 main              : 64x64 to 2560x1440 pixels
Decode h264 main              : 64x64 to 1440x2560 pixels
Decode h264 main              : 64x64 to 2048x1088 pixels (encrypted)
Decode h264 main              : 64x64 to 1088x2048 pixels (encrypted)
Decode h264 main              : 2x2 to 1920x1088 pixels (encrypted)
Decode h264 high              : 64x64 to 2560x1440 pixels
Decode h264 high              : 64x64 to 1440x2560 pixels
Decode h264 high              : 64x64 to 2048x1088 pixels (encrypted)
Decode h264 high              : 64x64 to 1088x2048 pixels (encrypted)
Decode h264 high              : 2x2 to 1920x1088 pixels (encrypted)
Decode vp8                    : 16x16 to 1920x1088 pixels
Decode vp8                    : 16x16 to 1088x1920 pixels
Decode vp8                    : 2x2 to 2048x1024 pixels (encrypted)
Decode vp8                    : 2x2 to 1024x2048 pixels (encrypted)
Decode vp9 profile0           : 16x16 to 2560x1440 pixels
Decode vp9 profile0           : 16x16 to 1440x2560 pixels
Decode vp9 profile0           : 16x16 to 1920x1088 pixels (encrypted)
Decode vp9 profile0           : 16x16 to 1088x1920 pixels (encrypted)
Decode vp9 profile0           : 2x2 to 1280x720 pixels (encrypted)
Decode vp9 profile0           : 2x2 to 720x1280 pixels (encrypted)
Decode vp9 profile1           : 16x16 to 2560x1440 pixels
Decode vp9 profile1           : 16x16 to 1440x2560 pixels
Decode vp9 profile1           : 16x16 to 1920x1088 pixels (encrypted)
Decode vp9 profile1           : 16x16 to 1088x1920 pixels (encrypted)
Decode vp9 profile2           : 2x2 to 1280x720 pixels
Decode vp9 profile2           : 2x2 to 720x1280 pixels
Decode hevc main              : 16x16 to 2560x1440 pixels
Decode hevc main              : 16x16 to 1440x2560 pixels
Decode hevc main              : 2x2 to 1920x1088 pixels
Decode hevc main still-picture: 2x2 to 1920x1088 pixels
Decode av1 profile main       : 2x2 to 1920x1088 pixels (encrypted)
Decode av1 profile main       : 2x2 to 2048x1024 pixels (encrypted)
Decode av1 profile main       : 2x2 to 1024x2048 pixels (encrypted)
Encoding                      : 
Encode h264 baseline          : 128x128 to 320x180 pixels, and/or 960.000 fps.
Encode h264 baseline          : 128x128 to 180x320 pixels, and/or 960.000 fps.
Encode h264 baseline          : 128x128 to 640x360 pixels, and/or 532.000 fps.
Encode h264 baseline          : 128x128 to 360x640 pixels, and/or 532.000 fps.
Encode h264 baseline          : 128x128 to 1280x720 pixels, and/or 136.000 fps.
Encode h264 baseline          : 128x128 to 720x1280 pixels, and/or 136.000 fps.
Encode h264 baseline          : 128x128 to 1920x1080 pixels, and/or 60.000 fps.
Encode h264 baseline          : 128x128 to 2560x1440 pixels, and/or 34.000 fps.
Encode h264 baseline          : 16x16 to 320x180 pixels, and/or 168.000 fps (software codec).
Encode h264 baseline          : 16x16 to 180x320 pixels, and/or 168.000 fps (software codec).
Encode h264 baseline          : 16x16 to 640x360 pixels, and/or 44.000 fps (software codec).
Encode h264 baseline          : 16x16 to 360x640 pixels, and/or 44.000 fps (software codec).
Encode h264 baseline          : 16x16 to 1808x224 pixels, and/or 25.000 fps (software codec).
Encode h264 baseline          : 16x16 to 224x1808 pixels, and/or 25.000 fps (software codec).
Encode h264 main              : 128x128 to 320x180 pixels, and/or 960.000 fps.
Encode h264 main              : 128x128 to 180x320 pixels, and/or 960.000 fps.
Encode h264 main              : 128x128 to 640x360 pixels, and/or 532.000 fps.
Encode h264 main              : 128x128 to 360x640 pixels, and/or 532.000 fps.
Encode h264 main              : 128x128 to 1280x720 pixels, and/or 136.000 fps.
Encode h264 main              : 128x128 to 720x1280 pixels, and/or 136.000 fps.
Encode h264 main              : 128x128 to 1920x1080 pixels, and/or 60.000 fps.
Encode h264 main              : 128x128 to 2560x1440 pixels, and/or 34.000 fps.
Encode h264 main              : 16x16 to 320x180 pixels, and/or 168.000 fps (software codec).
Encode h264 main              : 16x16 to 180x320 pixels, and/or 168.000 fps (software codec).
Encode h264 main              : 16x16 to 640x360 pixels, and/or 44.000 fps (software codec).
Encode h264 main              : 16x16 to 360x640 pixels, and/or 44.000 fps (software codec).
Encode h264 main              : 16x16 to 1808x224 pixels, and/or 25.000 fps (software codec).
Encode h264 main              : 16x16 to 224x1808 pixels, and/or 25.000 fps (software codec).
Encode h264 high              : 128x128 to 320x180 pixels, and/or 960.000 fps.
Encode h264 high              : 128x128 to 180x320 pixels, and/or 960.000 fps.
Encode h264 high              : 128x128 to 640x360 pixels, and/or 532.000 fps.
Encode h264 high              : 128x128 to 360x640 pixels, and/or 532.000 fps.
Encode h264 high              : 128x128 to 1280x720 pixels, and/or 136.000 fps.
Encode h264 high              : 128x128 to 720x1280 pixels, and/or 136.000 fps.
Encode h264 high              : 128x128 to 1920x1080 pixels, and/or 60.000 fps.
Encode h264 high              : 128x128 to 2560x1440 pixels, and/or 34.000 fps.
Encode hevc main              : 160x128 to 320x180 pixels, and/or 960.000 fps.
Encode hevc main              : 128x160 to 180x320 pixels, and/or 960.000 fps.
Encode hevc main              : 160x128 to 640x360 pixels, and/or 532.000 fps.
Encode hevc main              : 128x160 to 360x640 pixels, and/or 532.000 fps.
Encode hevc main              : 160x128 to 1280x720 pixels, and/or 136.000 fps.
Encode hevc main              : 128x160 to 720x1280 pixels, and/or 136.000 fps.
Encode hevc main              : 160x128 to 1920x1080 pixels, and/or 60.000 fps.
Encode hevc main              : 160x128 to 2560x864 pixels, and/or 56.000 fps.

Vulkan Information
==================

Device Performance Information
==============================

Log Messages
============