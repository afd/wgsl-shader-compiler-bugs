struct Uniforms {
    injectionSwitch : vec2f,
    resolution : vec2<i32>,
}

@group(0)
@binding(0)
var<uniform> ub : Uniforms;

@vertex
fn vertexMain(
    @location(0)
    pos : vec2f,
) ->
        @builtin(position)
    vec4f
{
    return vec4f(pos, ((0) - ((((4) * (((((14383839) + (491703)) - (14691564)) + (383643)) + (598276) * (3)) + ((201435) + (((14388593) - ((546148) + ((2371835) * ((5886426) - (5886421)) + (((5811197) - (4033024)) + ((19304) + (1026)))))) + (((((4) + ((0) * ((0) + ((1) * (1))))) * ((73031) + (98695)) + (115927)) + ((((33875) + (391669)) + (115464)) + (460373))) - (1723540))) * ((3) * (1)))) - ((((((1) + ((0) + (3))) * (((1962297) + (3313793)) - (5276089))) + (1)) * ((2290) + ((((11249468) - ((18) * (((201043) * (2) + ((44340) * ((7725800) - (((1463651) + (4226387)) + ((1189527) + (846233)))) + (2321))) + (114606)) + (((1106185) + (728761)) - ((122146) + (8) * (175305))))) + (1681)) + ((7394945) - (7378984))) * ((2) * ((((((1) * (0)) * (1) + (0)) + (0)) + (0)) + (((1306166) + (2) * ((2489598) + ((409319) + ((670) + (15) * ((2) * (502) + (501)))))) - ((((15879137) - (15750303)) * (7) + (12913)) + (6235738)))) + (((86488) * (7) + (68127)) - (673543)))) + (11630)) + ((((0) + (0)) + ((2) + (0))) * ((1) * (1))) * ((101579) * ((0) + (3) * ((((1) * (0)) + (((1) + ((6346227) - (6346227))) * (((9470227) - (9470227)) + (((0) + (1) * (1)) * (1)) * (0)) + (0))) + (1))) + (44649)))) - (((10720729) + (511570)) - ((((14541070) - ((3246217) + (6087291))) + (((((((14137040) - (14136072)) + (373)) + ((1333) + (2396)) * (13)) + (199351)) + ((3609120) - (3599154))) + ((((1955516) + ((11597163) - (6690161))) - (6735329)) + (159744)) * ((6228430) - (6228415)))) - ((((((((9042851) - (3082047)) + (8434754)) - ((1080000) + ((890322) + (152039)))) - (6428868)) + (6789073)) - (((((5006312) - (187280)) + (2) * (5855848)) - ((464708) + ((5377579) - (3680369)) * (3))) + ((((1001939) + ((12430209) - (10279832))) - (2447278)) + (((12360625) - (12290651)) + (441998) * (2))))) * (((110638) + ((213600) + ((4230836) - (3895648)) * ((0) + (((123607) + (4) * (991268)) - (4088677))))) + (684196)) + (((39) * (1) + ((0) + (0))) * (34952) + (2961))))))), 1, );
}

fn checkSwap(
    gl_FragCoord : vec4f,
    a : f32,
    b : f32,
) -> bool
{
    return select((a < b), (a > ((b) / ((f32((ub.resolution[1]), ) - (((((196f) + (ub.injectionSwitch[1])) + (ub.injectionSwitch[1])) + (ub.injectionSwitch[0])) + ((30f) + (27f)))) * (1f) + (((f32((ub.resolution[0]), ) + ((9125914f) + (2834633f))) - (((4f) * (((((((11090857f) - (((((117056f) + f32((ub.resolution[1]), )) + (22342f)) + (2f) * (637224f)) + (ub.injectionSwitch[0]))) + f32((ub.resolution[1]), )) - (9677011f)) + (0f)) + ((ub.injectionSwitch[0]) + (1f)) * (1f)) + (0f)) + (0f)) * (((f32((ub.resolution[1]), ) + ((282143f) + (ub.injectionSwitch[1]))) + (ub.injectionSwitch[1])) + (1324390f)) + ((f32((ub.resolution[1]), ) + (((ub.injectionSwitch[1]) + (((92122f) + (2f) * ((5392489f) - (4864976f))) + f32((ub.resolution[1]), ))) + f32((ub.resolution[1]), ))) + (ub.injectionSwitch[0])))) - ((4385466f) + f32((ub.resolution[1]), )))))), gl_FragCoord.y < ((f32((ub.resolution[1]), ) - (((15537770f) - ((ub.injectionSwitch[1]) + ((ub.injectionSwitch[0]) + ((8798943f) + f32((ub.resolution[1]), ))))) - ((((ub.injectionSwitch[1]) + (((ub.injectionSwitch[1]) + (16086922f)) - (f32((ub.resolution[0]), ) + (6440141f)))) - (((((1585883f) + (f32((ub.resolution[1]), ) - (254f)) * ((3251147f) + (48667f))) + (6033292f)) - (8943790f)) + f32((ub.resolution[0]), ))) + (2367057f)))) * (f32(ub.resolution.y, ) / 2.0)), );
}

@fragment
fn fragmentMain(
    @builtin(position)
    gl_FragCoord : vec4f,
) ->
        @location(0)
    vec4f
{
    var data : array<f32, 10>;
    for (var i : i32 = (((((1) * (((((12903854) - (12001814)) + (((852312) + (((5003056) + (5596943) * ((2) + (0))) - (14331043))) - (1975955))) - (1644296)) + (0)) + (((7683287) - (((4032788) * (((12040521) - (12040521)) + (1) * (2)) + (1442756)) - (1825045))) * (((1) * ((1) * (1) + (0)) + (0)) * (1)) + (0))) + ((0) * ((0) + ((1) + (((0) + (((16291322) - ((91805) * (6) + (10506))) - (15729986))) * ((1) + (0)))) * (1)))) + ((0) * ((((888575) * (((1) * ((3) + (((9322119) - (4643100)) - (4679017)))) * ((13506691) - (13506690)) + (0)) + (484272)) + (((2) * (1)) * (1)) * ((886657) * ((2) + ((1) + (2))) + (((4) * (313094) + (25677)) - (((32) + (11)) * (10536) + (8461))))) - ((515880) + ((63910) + ((0) + ((0) + (1)) * ((((678467) + (92867)) + (((((11443766) - (11186659)) + (1315036) * ((10) + (((9165642) - ((1886397) + (7279244))) + (1)))) - (329177)) - (14433694)) * (3)) - (((2) + ((1) + (0))) * ((4) * ((67701) * ((12433704) - (12433700)) + (35180)) + (283839)) + (72011)))) * ((4995) + ((2126264) - ((146895) + (327686) * (6))) * (24))) * ((16451537) - (16451516)))))) + (0)); i < ((10) * (1)); i++)
    {
        data[i] = ((f32(10 - i, )) / ((ub.injectionSwitch[1])));
    }
    for (var i : i32 = ((0) / ((((((7106302) - (7106301)) + (0)) * (0) + (((15698711) - (710917)) - (14987794))) + ((13134492) - (((14231171) - (((138569) + ((8135) + (3) * (35687))) + (128547))) - (714368)))) * (((((((8416327) - (1767584)) - (6648742)) * (0)) + (0)) + ((4707276) - (4707275)) * (1)) + (((1) * (((0) + (0)) + (0))) + ((((((((270320) + ((3) * (1)) * (393279)) + (828931)) - (1743975)) * (2) + (394361)) * (9) + ((1086817) - ((75911) + (207721)))) - (((476338) + (6) * (499595)) * (4) + (88835))) + (0)) * ((((1) + ((0) + ((0) * ((0) + (1))) * ((0) + (1) * (1)))) * ((15376448) - (15376448))) + ((15199702) - (15199702))))) + (((4099207) + ((1) * (2)) * ((2236580) + ((642523) + ((890354) + (((2610829) + ((8112375) - (5679440))) - (4831969))) * ((((1) * ((0) + ((1) * (1)))) * (1) + (((12999732) - (12999731)) * ((0) + (0)))) + (1))))) - ((((117174) + ((65626) + ((((4313720) + ((1984570) + ((((4854980) - (4854953)) * (4723) + (2476)) + (2111559)))) - (3002736)) - ((((226392) + ((1832154) + (1645415))) + (6063859) * (2)) - (10294575))) * (((2) * ((27814) - (14661)) + ((13945333) - (13935036))) + (38694))) * ((((0) + ((0) * (1))) + (1)) * ((3) * ((1) * ((((10092676) - (10092676)) + (0)) + (1)))) + (0))) + (2) * ((735978) + ((((1414) + (48413)) + (1861723)) + (124146)))) + (((386789) + (((16057487) - (1902369)) - (13870288))) + (2) * (3190822)))))); i < 9; i++)
    {
        for (var j : i32 = 0; j < 10; j++)
        {
            if (j < i + 1)
            {
                continue;
            }
            let doSwap = checkSwap(gl_FragCoord, data[i], data[j], );
            if (doSwap)
            {
                let temp = data[i];
                data[i] = data[j];
                data[j] = temp;
            }
        }
    }
    if (gl_FragCoord.x < ((f32((ub.resolution[0]), ) - (((2710401f) - ((((16747429f) + f32((ub.resolution[1]), )) - (10828440f)) - (f32((ub.resolution[0]), ) + (4660844f)))) - ((f32((ub.resolution[0]), ) + (1451745f)) + (ub.injectionSwitch[0])))) * (f32(ub.resolution.x, ) / 2.0)))
    {
        return vec4(data[((0) / ((16004614) - ((7107417) + ((865454) + ((2) * ((1) * (1) + (0)) + (0)) * (4015871)))))] / 10.0, data[5] / 10.0, data[9] / 10.0, 1.0, );
    }
    else
    {
        return vec4(((data[5] / 10.0) / (f32((ub.resolution[0]), ) - (((ub.injectionSwitch[1]) + (1958039f)) - ((f32((ub.resolution[1]), ) + ((((16178905f) + f32((ub.resolution[0]), )) + f32((ub.resolution[1]), )) - (((16404662f) + (ub.injectionSwitch[0])) - ((698300f) + (186319f))))) + (((ub.injectionSwitch[1]) + (3564790f)) - ((15861410f) - ((13594774f) + (ub.injectionSwitch[0])))))))), (((9876956f) - (((f32((ub.resolution[0]), ) - (((ub.injectionSwitch[0]) + (250f)) + (ub.injectionSwitch[1]))) + (ub.injectionSwitch[1])) * ((791326f) + (660441f)) + ((2170449f) - (((3f) * ((ub.injectionSwitch[1]))) * ((116056f) + (148090f)) + (211657f))))) + (data[9] / 10.0)), data[((0) / (1))] / 10.0, ((1.0) / ((((16761721) - (((1) * (7) + (((1690569) - ((542746) * ((8569938) - (((15093606) - (4945585)) - (1578086))) + (62330))) * (0))) * (6293) + (6212))) - (486787)) - (16224670))), );
    }
}
