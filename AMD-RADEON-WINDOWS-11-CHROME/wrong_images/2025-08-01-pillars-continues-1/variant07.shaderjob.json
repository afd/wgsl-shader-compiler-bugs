{
    "tu": {
        "directives": [],
        "globalDecls": [
            {
                "type": "com.wgslfuzz.core.GlobalDecl.Constant",
                "name": "DP_LENGTH",
                "initializer": {
                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                    "text": "256"
                }
            },
            {
                "type": "com.wgslfuzz.core.GlobalDecl.Variable",
                "attributes": [
                    {
                        "type": "com.wgslfuzz.core.Attribute.Group",
                        "expression": {
                            "type": "com.wgslfuzz.core.Expression.IntLiteral",
                            "text": "0"
                        }
                    },
                    {
                        "type": "com.wgslfuzz.core.Attribute.Binding",
                        "expression": {
                            "type": "com.wgslfuzz.core.Expression.IntLiteral",
                            "text": "0"
                        }
                    }
                ],
                "name": "resolution",
                "addressSpace": "UNIFORM",
                "typeDecl": {
                    "type": "com.wgslfuzz.core.TypeDecl.Vec2",
                    "elementType": {
                        "type": "com.wgslfuzz.core.TypeDecl.I32"
                    }
                }
            },
            {
                "type": "com.wgslfuzz.core.GlobalDecl.Variable",
                "attributes": [
                    {
                        "type": "com.wgslfuzz.core.Attribute.Group",
                        "expression": {
                            "type": "com.wgslfuzz.core.Expression.IntLiteral",
                            "text": "0"
                        }
                    },
                    {
                        "type": "com.wgslfuzz.core.Attribute.Binding",
                        "expression": {
                            "type": "com.wgslfuzz.core.Expression.IntLiteral",
                            "text": "1"
                        }
                    }
                ],
                "name": "dpInput",
                "addressSpace": "UNIFORM",
                "typeDecl": {
                    "type": "com.wgslfuzz.core.TypeDecl.Array",
                    "elementType": {
                        "type": "com.wgslfuzz.core.TypeDecl.Vec4",
                        "elementType": {
                            "type": "com.wgslfuzz.core.TypeDecl.I32"
                        }
                    },
                    "elementCount": {
                        "type": "com.wgslfuzz.core.Expression.Binary",
                        "operator": "DIVIDE",
                        "lhs": {
                            "type": "com.wgslfuzz.core.Expression.Identifier",
                            "name": "DP_LENGTH"
                        },
                        "rhs": {
                            "type": "com.wgslfuzz.core.Expression.IntLiteral",
                            "text": "8"
                        }
                    }
                }
            },
            {
                "type": "com.wgslfuzz.core.GlobalDecl.Variable",
                "name": "dp",
                "addressSpace": "PRIVATE",
                "typeDecl": {
                    "type": "com.wgslfuzz.core.TypeDecl.Array",
                    "elementType": {
                        "type": "com.wgslfuzz.core.TypeDecl.I32"
                    },
                    "elementCount": {
                        "type": "com.wgslfuzz.core.Expression.Identifier",
                        "name": "DP_LENGTH"
                    }
                }
            },
            {
                "type": "com.wgslfuzz.core.GlobalDecl.Function",
                "name": "trace",
                "parameters": [
                    {
                        "name": "posInitial",
                        "typeDecl": {
                            "type": "com.wgslfuzz.core.TypeDecl.NamedType",
                            "name": "vec2i"
                        }
                    }
                ],
                "returnType": {
                    "type": "com.wgslfuzz.core.TypeDecl.NamedType",
                    "name": "vec4f"
                },
                "body": {
                    "statements": [
                        {
                            "type": "com.wgslfuzz.core.Statement.Variable",
                            "name": "pos",
                            "typeDecl": {
                                "type": "com.wgslfuzz.core.TypeDecl.NamedType",
                                "name": "vec2i"
                            },
                            "initializer": {
                                "type": "com.wgslfuzz.core.Expression.Identifier",
                                "name": "posInitial"
                            }
                        },
                        {
                            "type": "com.wgslfuzz.core.Statement.While",
                            "condition": {
                                "type": "com.wgslfuzz.core.Expression.Paren",
                                "target": {
                                    "type": "com.wgslfuzz.core.Expression.Binary",
                                    "operator": "NOT_EQUAL",
                                    "lhs": {
                                        "type": "com.wgslfuzz.core.Expression.MemberLookup",
                                        "receiver": {
                                            "type": "com.wgslfuzz.core.Expression.Identifier",
                                            "name": "pos"
                                        },
                                        "memberName": "y"
                                    },
                                    "rhs": {
                                        "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                        "text": "256"
                                    }
                                }
                            },
                            "body": {
                                "statements": [
                                    {
                                        "type": "com.wgslfuzz.core.AugmentedStatement.DeadCodeFragment",
                                        "statement": {
                                            "type": "com.wgslfuzz.core.Statement.If",
                                            "condition": {
                                                "type": "com.wgslfuzz.core.AugmentedExpression.FalseByConstruction",
                                                "falseExpression": {
                                                    "type": "com.wgslfuzz.core.Expression.Binary",
                                                    "operator": "GREATER_THAN",
                                                    "lhs": {
                                                        "type": "com.wgslfuzz.core.Expression.IndexLookup",
                                                        "target": {
                                                            "type": "com.wgslfuzz.core.Expression.Identifier",
                                                            "name": "resolution"
                                                        },
                                                        "index": {
                                                            "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                                            "text": "1"
                                                        }
                                                    },
                                                    "rhs": {
                                                        "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                                        "text": "256"
                                                    }
                                                }
                                            },
                                            "thenBranch": {
                                                "statements": [
                                                    {
                                                        "type": "com.wgslfuzz.core.Statement.Continue"
                                                    }
                                                ]
                                            },
                                            "elseBranch": {
                                                "type": "com.wgslfuzz.core.Statement.Compound",
                                                "statements": []
                                            }
                                        }
                                    },
                                    {
                                        "type": "com.wgslfuzz.core.Statement.If",
                                        "condition": {
                                            "type": "com.wgslfuzz.core.Expression.Paren",
                                            "target": {
                                                "type": "com.wgslfuzz.core.Expression.Binary",
                                                "operator": "SHORT_CIRCUIT_AND",
                                                "lhs": {
                                                    "type": "com.wgslfuzz.core.Expression.Binary",
                                                    "operator": "LESS_THAN",
                                                    "lhs": {
                                                        "type": "com.wgslfuzz.core.Expression.MemberLookup",
                                                        "receiver": {
                                                            "type": "com.wgslfuzz.core.Expression.Identifier",
                                                            "name": "pos"
                                                        },
                                                        "memberName": "x"
                                                    },
                                                    "rhs": {
                                                        "type": "com.wgslfuzz.core.Expression.Binary",
                                                        "operator": "PLUS",
                                                        "lhs": {
                                                            "type": "com.wgslfuzz.core.Expression.IndexLookup",
                                                            "target": {
                                                                "type": "com.wgslfuzz.core.Expression.Identifier",
                                                                "name": "dp"
                                                            },
                                                            "index": {
                                                                "type": "com.wgslfuzz.core.Expression.MemberLookup",
                                                                "receiver": {
                                                                    "type": "com.wgslfuzz.core.Expression.Identifier",
                                                                    "name": "pos"
                                                                },
                                                                "memberName": "y"
                                                            }
                                                        },
                                                        "rhs": {
                                                            "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                                            "text": "15"
                                                        }
                                                    }
                                                },
                                                "rhs": {
                                                    "type": "com.wgslfuzz.core.Expression.Binary",
                                                    "operator": "GREATER_THAN",
                                                    "lhs": {
                                                        "type": "com.wgslfuzz.core.Expression.MemberLookup",
                                                        "receiver": {
                                                            "type": "com.wgslfuzz.core.Expression.Identifier",
                                                            "name": "pos"
                                                        },
                                                        "memberName": "x"
                                                    },
                                                    "rhs": {
                                                        "type": "com.wgslfuzz.core.Expression.Binary",
                                                        "operator": "MINUS",
                                                        "lhs": {
                                                            "type": "com.wgslfuzz.core.Expression.IndexLookup",
                                                            "target": {
                                                                "type": "com.wgslfuzz.core.Expression.Identifier",
                                                                "name": "dp"
                                                            },
                                                            "index": {
                                                                "type": "com.wgslfuzz.core.Expression.MemberLookup",
                                                                "receiver": {
                                                                    "type": "com.wgslfuzz.core.Expression.Identifier",
                                                                    "name": "pos"
                                                                },
                                                                "memberName": "y"
                                                            }
                                                        },
                                                        "rhs": {
                                                            "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                                            "text": "15"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "thenBranch": {
                                            "statements": [
                                                {
                                                    "type": "com.wgslfuzz.core.Statement.Value",
                                                    "isConst": false,
                                                    "name": "p",
                                                    "initializer": {
                                                        "type": "com.wgslfuzz.core.Expression.Binary",
                                                        "operator": "DIVIDE",
                                                        "lhs": {
                                                            "type": "com.wgslfuzz.core.Expression.Paren",
                                                            "target": {
                                                                "type": "com.wgslfuzz.core.Expression.Binary",
                                                                "operator": "MINUS",
                                                                "lhs": {
                                                                    "type": "com.wgslfuzz.core.Expression.FloatLiteral",
                                                                    "text": "15.0"
                                                                },
                                                                "rhs": {
                                                                    "type": "com.wgslfuzz.core.Expression.FunctionCall",
                                                                    "callee": "abs",
                                                                    "args": [
                                                                        {
                                                                            "type": "com.wgslfuzz.core.Expression.F32ValueConstructor",
                                                                            "args": [
                                                                                {
                                                                                    "type": "com.wgslfuzz.core.Expression.Binary",
                                                                                    "operator": "MINUS",
                                                                                    "lhs": {
                                                                                        "type": "com.wgslfuzz.core.Expression.MemberLookup",
                                                                                        "receiver": {
                                                                                            "type": "com.wgslfuzz.core.Expression.Identifier",
                                                                                            "name": "pos"
                                                                                        },
                                                                                        "memberName": "x"
                                                                                    },
                                                                                    "rhs": {
                                                                                        "type": "com.wgslfuzz.core.Expression.IndexLookup",
                                                                                        "target": {
                                                                                            "type": "com.wgslfuzz.core.Expression.Identifier",
                                                                                            "name": "dp"
                                                                                        },
                                                                                        "index": {
                                                                                            "type": "com.wgslfuzz.core.Expression.MemberLookup",
                                                                                            "receiver": {
                                                                                                "type": "com.wgslfuzz.core.Expression.Identifier",
                                                                                                "name": "pos"
                                                                                            },
                                                                                            "memberName": "y"
                                                                                        }
                                                                                    }
                                                                                }
                                                                            ]
                                                                        }
                                                                    ]
                                                                }
                                                            }
                                                        },
                                                        "rhs": {
                                                            "type": "com.wgslfuzz.core.Expression.FloatLiteral",
                                                            "text": "15.0"
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "com.wgslfuzz.core.AugmentedStatement.DeadCodeFragment",
                                                    "statement": {
                                                        "type": "com.wgslfuzz.core.Statement.If",
                                                        "condition": {
                                                            "type": "com.wgslfuzz.core.AugmentedExpression.TrueByConstruction",
                                                            "trueExpression": {
                                                                "type": "com.wgslfuzz.core.Expression.Binary",
                                                                "operator": "EQUAL_EQUAL",
                                                                "lhs": {
                                                                    "type": "com.wgslfuzz.core.Expression.IndexLookup",
                                                                    "target": {
                                                                        "type": "com.wgslfuzz.core.Expression.Identifier",
                                                                        "name": "resolution"
                                                                    },
                                                                    "index": {
                                                                        "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                                                        "text": "1"
                                                                    }
                                                                },
                                                                "rhs": {
                                                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                                                    "text": "256"
                                                                }
                                                            }
                                                        },
                                                        "thenBranch": {
                                                            "statements": []
                                                        },
                                                        "elseBranch": {
                                                            "type": "com.wgslfuzz.core.Statement.Compound",
                                                            "statements": [
                                                                {
                                                                    "type": "com.wgslfuzz.core.Statement.Continue"
                                                                }
                                                            ]
                                                        }
                                                    }
                                                },
                                                {
                                                    "type": "com.wgslfuzz.core.Statement.Return",
                                                    "expression": {
                                                        "type": "com.wgslfuzz.core.Expression.Vec4ValueConstructor",
                                                        "args": [
                                                            {
                                                                "type": "com.wgslfuzz.core.Expression.Identifier",
                                                                "name": "p"
                                                            },
                                                            {
                                                                "type": "com.wgslfuzz.core.Expression.Identifier",
                                                                "name": "p"
                                                            },
                                                            {
                                                                "type": "com.wgslfuzz.core.Expression.Identifier",
                                                                "name": "p"
                                                            },
                                                            {
                                                                "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                                                "text": "1"
                                                            }
                                                        ]
                                                    }
                                                }
                                            ]
                                        }
                                    },
                                    {
                                        "type": "com.wgslfuzz.core.AugmentedStatement.DeadCodeFragment",
                                        "statement": {
                                            "type": "com.wgslfuzz.core.Statement.If",
                                            "condition": {
                                                "type": "com.wgslfuzz.core.AugmentedExpression.TrueByConstruction",
                                                "trueExpression": {
                                                    "type": "com.wgslfuzz.core.Expression.Binary",
                                                    "operator": "LESS_THAN_EQUAL",
                                                    "lhs": {
                                                        "type": "com.wgslfuzz.core.Expression.IndexLookup",
                                                        "target": {
                                                            "type": "com.wgslfuzz.core.Expression.Identifier",
                                                            "name": "resolution"
                                                        },
                                                        "index": {
                                                            "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                                            "text": "1"
                                                        }
                                                    },
                                                    "rhs": {
                                                        "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                                        "text": "256"
                                                    }
                                                }
                                            },
                                            "thenBranch": {
                                                "statements": []
                                            },
                                            "elseBranch": {
                                                "type": "com.wgslfuzz.core.Statement.Compound",
                                                "statements": [
                                                    {
                                                        "type": "com.wgslfuzz.core.Statement.Continue"
                                                    }
                                                ]
                                            }
                                        }
                                    },
                                    {
                                        "type": "com.wgslfuzz.core.Statement.Increment",
                                        "target": {
                                            "type": "com.wgslfuzz.core.LhsExpression.MemberLookup",
                                            "receiver": {
                                                "type": "com.wgslfuzz.core.LhsExpression.Identifier",
                                                "name": "pos"
                                            },
                                            "memberName": "y"
                                        }
                                    },
                                    {
                                        "type": "com.wgslfuzz.core.AugmentedStatement.DeadCodeFragment",
                                        "statement": {
                                            "type": "com.wgslfuzz.core.Statement.If",
                                            "condition": {
                                                "type": "com.wgslfuzz.core.AugmentedExpression.TrueByConstruction",
                                                "trueExpression": {
                                                    "type": "com.wgslfuzz.core.Expression.Binary",
                                                    "operator": "GREATER_THAN_EQUAL",
                                                    "lhs": {
                                                        "type": "com.wgslfuzz.core.Expression.IndexLookup",
                                                        "target": {
                                                            "type": "com.wgslfuzz.core.Expression.IndexLookup",
                                                            "target": {
                                                                "type": "com.wgslfuzz.core.Expression.Identifier",
                                                                "name": "dpInput"
                                                            },
                                                            "index": {
                                                                "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                                                "text": "14"
                                                            }
                                                        },
                                                        "index": {
                                                            "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                                            "text": "1"
                                                        }
                                                    },
                                                    "rhs": {
                                                        "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                                        "text": "12714191"
                                                    }
                                                }
                                            },
                                            "thenBranch": {
                                                "statements": []
                                            },
                                            "elseBranch": {
                                                "type": "com.wgslfuzz.core.Statement.Compound",
                                                "statements": [
                                                    {
                                                        "type": "com.wgslfuzz.core.Statement.Continue"
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "type": "com.wgslfuzz.core.Statement.Return",
                            "expression": {
                                "type": "com.wgslfuzz.core.Expression.Vec4ValueConstructor",
                                "args": [
                                    {
                                        "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                        "text": "0"
                                    },
                                    {
                                        "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                        "text": "0"
                                    },
                                    {
                                        "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                        "text": "0"
                                    },
                                    {
                                        "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                        "text": "1"
                                    }
                                ]
                            }
                        }
                    ]
                }
            },
            {
                "type": "com.wgslfuzz.core.GlobalDecl.Function",
                "attributes": [
                    {
                        "type": "com.wgslfuzz.core.Attribute.Vertex"
                    }
                ],
                "name": "vertexMain",
                "parameters": [
                    {
                        "attributes": [
                            {
                                "type": "com.wgslfuzz.core.Attribute.Location",
                                "expression": {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "0"
                                }
                            }
                        ],
                        "name": "pos",
                        "typeDecl": {
                            "type": "com.wgslfuzz.core.TypeDecl.NamedType",
                            "name": "vec2f"
                        }
                    }
                ],
                "returnAttributes": [
                    {
                        "type": "com.wgslfuzz.core.Attribute.Builtin",
                        "name": "POSITION"
                    }
                ],
                "returnType": {
                    "type": "com.wgslfuzz.core.TypeDecl.NamedType",
                    "name": "vec4f"
                },
                "body": {
                    "statements": [
                        {
                            "type": "com.wgslfuzz.core.Statement.Return",
                            "expression": {
                                "type": "com.wgslfuzz.core.Expression.FunctionCall",
                                "callee": "vec4f",
                                "args": [
                                    {
                                        "type": "com.wgslfuzz.core.Expression.Identifier",
                                        "name": "pos"
                                    },
                                    {
                                        "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                        "text": "0"
                                    },
                                    {
                                        "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                        "text": "1"
                                    }
                                ]
                            }
                        }
                    ]
                }
            },
            {
                "type": "com.wgslfuzz.core.GlobalDecl.Function",
                "name": "getBottomHalf",
                "parameters": [
                    {
                        "name": "num",
                        "typeDecl": {
                            "type": "com.wgslfuzz.core.TypeDecl.I32"
                        }
                    }
                ],
                "returnType": {
                    "type": "com.wgslfuzz.core.TypeDecl.I32"
                },
                "body": {
                    "statements": [
                        {
                            "type": "com.wgslfuzz.core.Statement.Return",
                            "expression": {
                                "type": "com.wgslfuzz.core.Expression.Binary",
                                "operator": "BINARY_AND",
                                "lhs": {
                                    "type": "com.wgslfuzz.core.Expression.Identifier",
                                    "name": "num"
                                },
                                "rhs": {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "0xFFFF"
                                }
                            }
                        }
                    ]
                }
            },
            {
                "type": "com.wgslfuzz.core.GlobalDecl.Function",
                "name": "getTopHalf",
                "parameters": [
                    {
                        "name": "num",
                        "typeDecl": {
                            "type": "com.wgslfuzz.core.TypeDecl.I32"
                        }
                    }
                ],
                "returnType": {
                    "type": "com.wgslfuzz.core.TypeDecl.I32"
                },
                "body": {
                    "statements": [
                        {
                            "type": "com.wgslfuzz.core.Statement.Return",
                            "expression": {
                                "type": "com.wgslfuzz.core.Expression.Binary",
                                "operator": "BINARY_AND",
                                "lhs": {
                                    "type": "com.wgslfuzz.core.Expression.Paren",
                                    "target": {
                                        "type": "com.wgslfuzz.core.Expression.Binary",
                                        "operator": "SHIFT_RIGHT",
                                        "lhs": {
                                            "type": "com.wgslfuzz.core.Expression.Identifier",
                                            "name": "num"
                                        },
                                        "rhs": {
                                            "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                            "text": "16"
                                        }
                                    }
                                },
                                "rhs": {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "0xFFFF"
                                }
                            }
                        }
                    ]
                }
            },
            {
                "type": "com.wgslfuzz.core.GlobalDecl.Function",
                "attributes": [
                    {
                        "type": "com.wgslfuzz.core.Attribute.Fragment"
                    }
                ],
                "name": "fragmentMain",
                "parameters": [
                    {
                        "attributes": [
                            {
                                "type": "com.wgslfuzz.core.Attribute.Builtin",
                                "name": "POSITION"
                            }
                        ],
                        "name": "gl_FragCoord",
                        "typeDecl": {
                            "type": "com.wgslfuzz.core.TypeDecl.NamedType",
                            "name": "vec4f"
                        }
                    }
                ],
                "returnAttributes": [
                    {
                        "type": "com.wgslfuzz.core.Attribute.Location",
                        "expression": {
                            "type": "com.wgslfuzz.core.Expression.IntLiteral",
                            "text": "0"
                        }
                    }
                ],
                "returnType": {
                    "type": "com.wgslfuzz.core.TypeDecl.NamedType",
                    "name": "vec4f"
                },
                "body": {
                    "statements": [
                        {
                            "type": "com.wgslfuzz.core.Statement.For",
                            "init": {
                                "type": "com.wgslfuzz.core.Statement.Variable",
                                "name": "i",
                                "initializer": {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "0"
                                }
                            },
                            "condition": {
                                "type": "com.wgslfuzz.core.Expression.Binary",
                                "operator": "LESS_THAN",
                                "lhs": {
                                    "type": "com.wgslfuzz.core.Expression.Identifier",
                                    "name": "i"
                                },
                                "rhs": {
                                    "type": "com.wgslfuzz.core.Expression.Binary",
                                    "operator": "DIVIDE",
                                    "lhs": {
                                        "type": "com.wgslfuzz.core.Expression.Identifier",
                                        "name": "DP_LENGTH"
                                    },
                                    "rhs": {
                                        "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                        "text": "8"
                                    }
                                }
                            },
                            "update": {
                                "type": "com.wgslfuzz.core.Statement.Increment",
                                "target": {
                                    "type": "com.wgslfuzz.core.LhsExpression.Identifier",
                                    "name": "i"
                                }
                            },
                            "body": {
                                "statements": [
                                    {
                                        "type": "com.wgslfuzz.core.Statement.Value",
                                        "isConst": false,
                                        "name": "index",
                                        "initializer": {
                                            "type": "com.wgslfuzz.core.Expression.Binary",
                                            "operator": "TIMES",
                                            "lhs": {
                                                "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                                "text": "8"
                                            },
                                            "rhs": {
                                                "type": "com.wgslfuzz.core.Expression.Identifier",
                                                "name": "i"
                                            }
                                        }
                                    },
                                    {
                                        "type": "com.wgslfuzz.core.Statement.Assignment",
                                        "lhsExpression": {
                                            "type": "com.wgslfuzz.core.LhsExpression.IndexLookup",
                                            "target": {
                                                "type": "com.wgslfuzz.core.LhsExpression.Identifier",
                                                "name": "dp"
                                            },
                                            "index": {
                                                "type": "com.wgslfuzz.core.Expression.Identifier",
                                                "name": "index"
                                            }
                                        },
                                        "assignmentOperator": "EQUAL",
                                        "rhs": {
                                            "type": "com.wgslfuzz.core.Expression.FunctionCall",
                                            "callee": "getBottomHalf",
                                            "args": [
                                                {
                                                    "type": "com.wgslfuzz.core.Expression.MemberLookup",
                                                    "receiver": {
                                                        "type": "com.wgslfuzz.core.Expression.IndexLookup",
                                                        "target": {
                                                            "type": "com.wgslfuzz.core.Expression.Identifier",
                                                            "name": "dpInput"
                                                        },
                                                        "index": {
                                                            "type": "com.wgslfuzz.core.Expression.Identifier",
                                                            "name": "i"
                                                        }
                                                    },
                                                    "memberName": "x"
                                                }
                                            ]
                                        }
                                    },
                                    {
                                        "type": "com.wgslfuzz.core.AugmentedStatement.DeadCodeFragment",
                                        "statement": {
                                            "type": "com.wgslfuzz.core.Statement.If",
                                            "condition": {
                                                "type": "com.wgslfuzz.core.AugmentedExpression.FalseByConstruction",
                                                "falseExpression": {
                                                    "type": "com.wgslfuzz.core.Expression.Binary",
                                                    "operator": "GREATER_THAN",
                                                    "lhs": {
                                                        "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                                        "text": "256"
                                                    },
                                                    "rhs": {
                                                        "type": "com.wgslfuzz.core.Expression.IndexLookup",
                                                        "target": {
                                                            "type": "com.wgslfuzz.core.Expression.Identifier",
                                                            "name": "resolution"
                                                        },
                                                        "index": {
                                                            "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                                            "text": "1"
                                                        }
                                                    }
                                                }
                                            },
                                            "thenBranch": {
                                                "statements": [
                                                    {
                                                        "type": "com.wgslfuzz.core.Statement.Continue"
                                                    }
                                                ]
                                            }
                                        }
                                    },
                                    {
                                        "type": "com.wgslfuzz.core.Statement.Assignment",
                                        "lhsExpression": {
                                            "type": "com.wgslfuzz.core.LhsExpression.IndexLookup",
                                            "target": {
                                                "type": "com.wgslfuzz.core.LhsExpression.Identifier",
                                                "name": "dp"
                                            },
                                            "index": {
                                                "type": "com.wgslfuzz.core.Expression.Binary",
                                                "operator": "PLUS",
                                                "lhs": {
                                                    "type": "com.wgslfuzz.core.Expression.Identifier",
                                                    "name": "index"
                                                },
                                                "rhs": {
                                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                                    "text": "1"
                                                }
                                            }
                                        },
                                        "assignmentOperator": "EQUAL",
                                        "rhs": {
                                            "type": "com.wgslfuzz.core.Expression.FunctionCall",
                                            "callee": "getTopHalf",
                                            "args": [
                                                {
                                                    "type": "com.wgslfuzz.core.Expression.MemberLookup",
                                                    "receiver": {
                                                        "type": "com.wgslfuzz.core.Expression.IndexLookup",
                                                        "target": {
                                                            "type": "com.wgslfuzz.core.Expression.Identifier",
                                                            "name": "dpInput"
                                                        },
                                                        "index": {
                                                            "type": "com.wgslfuzz.core.Expression.Identifier",
                                                            "name": "i"
                                                        }
                                                    },
                                                    "memberName": "x"
                                                }
                                            ]
                                        }
                                    },
                                    {
                                        "type": "com.wgslfuzz.core.AugmentedStatement.DeadCodeFragment",
                                        "statement": {
                                            "type": "com.wgslfuzz.core.Statement.If",
                                            "condition": {
                                                "type": "com.wgslfuzz.core.AugmentedExpression.FalseByConstruction",
                                                "falseExpression": {
                                                    "type": "com.wgslfuzz.core.Expression.Binary",
                                                    "operator": "SHORT_CIRCUIT_AND",
                                                    "lhs": {
                                                        "type": "com.wgslfuzz.core.AugmentedExpression.FalseByConstruction",
                                                        "falseExpression": {
                                                            "type": "com.wgslfuzz.core.Expression.Binary",
                                                            "operator": "SHORT_CIRCUIT_AND",
                                                            "lhs": {
                                                                "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                "expression": {
                                                                    "type": "com.wgslfuzz.core.Expression.BoolLiteral",
                                                                    "text": "true"
                                                                }
                                                            },
                                                            "rhs": {
                                                                "type": "com.wgslfuzz.core.AugmentedExpression.FalseByConstruction",
                                                                "falseExpression": {
                                                                    "type": "com.wgslfuzz.core.Expression.Binary",
                                                                    "operator": "GREATER_THAN",
                                                                    "lhs": {
                                                                        "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                                                        "text": "10551459"
                                                                    },
                                                                    "rhs": {
                                                                        "type": "com.wgslfuzz.core.Expression.IndexLookup",
                                                                        "target": {
                                                                            "type": "com.wgslfuzz.core.Expression.IndexLookup",
                                                                            "target": {
                                                                                "type": "com.wgslfuzz.core.Expression.Identifier",
                                                                                "name": "dpInput"
                                                                            },
                                                                            "index": {
                                                                                "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                                                                "text": "3"
                                                                            }
                                                                        },
                                                                        "index": {
                                                                            "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                                                            "text": "3"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "rhs": {
                                                        "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                        "expression": {
                                                            "type": "com.wgslfuzz.core.Expression.Binary",
                                                            "operator": "SHORT_CIRCUIT_AND",
                                                            "lhs": {
                                                                "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                "expression": {
                                                                    "type": "com.wgslfuzz.core.Expression.Binary",
                                                                    "operator": "SHORT_CIRCUIT_OR",
                                                                    "lhs": {
                                                                        "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                        "expression": {
                                                                            "type": "com.wgslfuzz.core.Expression.Binary",
                                                                            "operator": "SHORT_CIRCUIT_AND",
                                                                            "lhs": {
                                                                                "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                "expression": {
                                                                                    "type": "com.wgslfuzz.core.Expression.Binary",
                                                                                    "operator": "SHORT_CIRCUIT_OR",
                                                                                    "lhs": {
                                                                                        "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                        "expression": {
                                                                                            "type": "com.wgslfuzz.core.Expression.BoolLiteral",
                                                                                            "text": "false"
                                                                                        }
                                                                                    },
                                                                                    "rhs": {
                                                                                        "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                        "expression": {
                                                                                            "type": "com.wgslfuzz.core.Expression.BoolLiteral",
                                                                                            "text": "false"
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            "rhs": {
                                                                                "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                "expression": {
                                                                                    "type": "com.wgslfuzz.core.Expression.Binary",
                                                                                    "operator": "SHORT_CIRCUIT_AND",
                                                                                    "lhs": {
                                                                                        "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                        "expression": {
                                                                                            "type": "com.wgslfuzz.core.Expression.Binary",
                                                                                            "operator": "SHORT_CIRCUIT_OR",
                                                                                            "lhs": {
                                                                                                "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                                "expression": {
                                                                                                    "type": "com.wgslfuzz.core.Expression.Binary",
                                                                                                    "operator": "SHORT_CIRCUIT_AND",
                                                                                                    "lhs": {
                                                                                                        "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                                        "expression": {
                                                                                                            "type": "com.wgslfuzz.core.Expression.Binary",
                                                                                                            "operator": "SHORT_CIRCUIT_AND",
                                                                                                            "lhs": {
                                                                                                                "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                                                "expression": {
                                                                                                                    "type": "com.wgslfuzz.core.Expression.Binary",
                                                                                                                    "operator": "SHORT_CIRCUIT_AND",
                                                                                                                    "lhs": {
                                                                                                                        "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                                                        "expression": {
                                                                                                                            "type": "com.wgslfuzz.core.Expression.BoolLiteral",
                                                                                                                            "text": "true"
                                                                                                                        }
                                                                                                                    },
                                                                                                                    "rhs": {
                                                                                                                        "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                                                        "expression": {
                                                                                                                            "type": "com.wgslfuzz.core.Expression.Binary",
                                                                                                                            "operator": "SHORT_CIRCUIT_AND",
                                                                                                                            "lhs": {
                                                                                                                                "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                                                                "expression": {
                                                                                                                                    "type": "com.wgslfuzz.core.Expression.BoolLiteral",
                                                                                                                                    "text": "false"
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "rhs": {
                                                                                                                                "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                                                                "expression": {
                                                                                                                                    "type": "com.wgslfuzz.core.Expression.BoolLiteral",
                                                                                                                                    "text": "false"
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            },
                                                                                                            "rhs": {
                                                                                                                "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                                                "expression": {
                                                                                                                    "type": "com.wgslfuzz.core.Expression.BoolLiteral",
                                                                                                                    "text": "false"
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    },
                                                                                                    "rhs": {
                                                                                                        "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                                        "expression": {
                                                                                                            "type": "com.wgslfuzz.core.Expression.BoolLiteral",
                                                                                                            "text": "true"
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "rhs": {
                                                                                                "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                                "expression": {
                                                                                                    "type": "com.wgslfuzz.core.Expression.BoolLiteral",
                                                                                                    "text": "true"
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "rhs": {
                                                                                        "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                        "expression": {
                                                                                            "type": "com.wgslfuzz.core.Expression.Binary",
                                                                                            "operator": "SHORT_CIRCUIT_AND",
                                                                                            "lhs": {
                                                                                                "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                                "expression": {
                                                                                                    "type": "com.wgslfuzz.core.Expression.BoolLiteral",
                                                                                                    "text": "false"
                                                                                                }
                                                                                            },
                                                                                            "rhs": {
                                                                                                "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                                "expression": {
                                                                                                    "type": "com.wgslfuzz.core.Expression.BoolLiteral",
                                                                                                    "text": "true"
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "rhs": {
                                                                        "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                        "expression": {
                                                                            "type": "com.wgslfuzz.core.Expression.Binary",
                                                                            "operator": "SHORT_CIRCUIT_AND",
                                                                            "lhs": {
                                                                                "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                "expression": {
                                                                                    "type": "com.wgslfuzz.core.Expression.Unary",
                                                                                    "operator": "LOGICAL_NOT",
                                                                                    "target": {
                                                                                        "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                        "expression": {
                                                                                            "type": "com.wgslfuzz.core.Expression.BoolLiteral",
                                                                                            "text": "true"
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            "rhs": {
                                                                                "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                "expression": {
                                                                                    "type": "com.wgslfuzz.core.Expression.Binary",
                                                                                    "operator": "SHORT_CIRCUIT_AND",
                                                                                    "lhs": {
                                                                                        "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                        "expression": {
                                                                                            "type": "com.wgslfuzz.core.Expression.Binary",
                                                                                            "operator": "SHORT_CIRCUIT_AND",
                                                                                            "lhs": {
                                                                                                "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                                "expression": {
                                                                                                    "type": "com.wgslfuzz.core.Expression.BoolLiteral",
                                                                                                    "text": "false"
                                                                                                }
                                                                                            },
                                                                                            "rhs": {
                                                                                                "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                                "expression": {
                                                                                                    "type": "com.wgslfuzz.core.Expression.BoolLiteral",
                                                                                                    "text": "true"
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "rhs": {
                                                                                        "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                        "expression": {
                                                                                            "type": "com.wgslfuzz.core.Expression.Binary",
                                                                                            "operator": "SHORT_CIRCUIT_AND",
                                                                                            "lhs": {
                                                                                                "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                                "expression": {
                                                                                                    "type": "com.wgslfuzz.core.Expression.Binary",
                                                                                                    "operator": "SHORT_CIRCUIT_OR",
                                                                                                    "lhs": {
                                                                                                        "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                                        "expression": {
                                                                                                            "type": "com.wgslfuzz.core.Expression.BoolLiteral",
                                                                                                            "text": "true"
                                                                                                        }
                                                                                                    },
                                                                                                    "rhs": {
                                                                                                        "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                                        "expression": {
                                                                                                            "type": "com.wgslfuzz.core.Expression.Unary",
                                                                                                            "operator": "LOGICAL_NOT",
                                                                                                            "target": {
                                                                                                                "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                                                "expression": {
                                                                                                                    "type": "com.wgslfuzz.core.Expression.BoolLiteral",
                                                                                                                    "text": "true"
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "rhs": {
                                                                                                "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                                "expression": {
                                                                                                    "type": "com.wgslfuzz.core.Expression.Binary",
                                                                                                    "operator": "SHORT_CIRCUIT_OR",
                                                                                                    "lhs": {
                                                                                                        "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                                        "expression": {
                                                                                                            "type": "com.wgslfuzz.core.Expression.Binary",
                                                                                                            "operator": "SHORT_CIRCUIT_AND",
                                                                                                            "lhs": {
                                                                                                                "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                                                "expression": {
                                                                                                                    "type": "com.wgslfuzz.core.Expression.Binary",
                                                                                                                    "operator": "SHORT_CIRCUIT_AND",
                                                                                                                    "lhs": {
                                                                                                                        "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                                                        "expression": {
                                                                                                                            "type": "com.wgslfuzz.core.Expression.BoolLiteral",
                                                                                                                            "text": "false"
                                                                                                                        }
                                                                                                                    },
                                                                                                                    "rhs": {
                                                                                                                        "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                                                        "expression": {
                                                                                                                            "type": "com.wgslfuzz.core.Expression.Binary",
                                                                                                                            "operator": "SHORT_CIRCUIT_AND",
                                                                                                                            "lhs": {
                                                                                                                                "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                                                                "expression": {
                                                                                                                                    "type": "com.wgslfuzz.core.Expression.Binary",
                                                                                                                                    "operator": "SHORT_CIRCUIT_AND",
                                                                                                                                    "lhs": {
                                                                                                                                        "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                                                                        "expression": {
                                                                                                                                            "type": "com.wgslfuzz.core.Expression.BoolLiteral",
                                                                                                                                            "text": "true"
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    "rhs": {
                                                                                                                                        "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                                                                        "expression": {
                                                                                                                                            "type": "com.wgslfuzz.core.Expression.Unary",
                                                                                                                                            "operator": "LOGICAL_NOT",
                                                                                                                                            "target": {
                                                                                                                                                "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                                                                                "expression": {
                                                                                                                                                    "type": "com.wgslfuzz.core.Expression.BoolLiteral",
                                                                                                                                                    "text": "true"
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "rhs": {
                                                                                                                                "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                                                                "expression": {
                                                                                                                                    "type": "com.wgslfuzz.core.Expression.BoolLiteral",
                                                                                                                                    "text": "true"
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            },
                                                                                                            "rhs": {
                                                                                                                "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                                                "expression": {
                                                                                                                    "type": "com.wgslfuzz.core.Expression.BoolLiteral",
                                                                                                                    "text": "false"
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    },
                                                                                                    "rhs": {
                                                                                                        "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                                        "expression": {
                                                                                                            "type": "com.wgslfuzz.core.Expression.BoolLiteral",
                                                                                                            "text": "false"
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "rhs": {
                                                                "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                "expression": {
                                                                    "type": "com.wgslfuzz.core.Expression.Binary",
                                                                    "operator": "SHORT_CIRCUIT_AND",
                                                                    "lhs": {
                                                                        "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                        "expression": {
                                                                            "type": "com.wgslfuzz.core.Expression.Binary",
                                                                            "operator": "SHORT_CIRCUIT_OR",
                                                                            "lhs": {
                                                                                "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                "expression": {
                                                                                    "type": "com.wgslfuzz.core.Expression.Binary",
                                                                                    "operator": "SHORT_CIRCUIT_OR",
                                                                                    "lhs": {
                                                                                        "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                        "expression": {
                                                                                            "type": "com.wgslfuzz.core.Expression.Unary",
                                                                                            "operator": "LOGICAL_NOT",
                                                                                            "target": {
                                                                                                "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                                "expression": {
                                                                                                    "type": "com.wgslfuzz.core.Expression.Binary",
                                                                                                    "operator": "SHORT_CIRCUIT_AND",
                                                                                                    "lhs": {
                                                                                                        "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                                        "expression": {
                                                                                                            "type": "com.wgslfuzz.core.Expression.Binary",
                                                                                                            "operator": "SHORT_CIRCUIT_OR",
                                                                                                            "lhs": {
                                                                                                                "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                                                "expression": {
                                                                                                                    "type": "com.wgslfuzz.core.Expression.Unary",
                                                                                                                    "operator": "LOGICAL_NOT",
                                                                                                                    "target": {
                                                                                                                        "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                                                        "expression": {
                                                                                                                            "type": "com.wgslfuzz.core.Expression.BoolLiteral",
                                                                                                                            "text": "true"
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            },
                                                                                                            "rhs": {
                                                                                                                "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                                                "expression": {
                                                                                                                    "type": "com.wgslfuzz.core.Expression.BoolLiteral",
                                                                                                                    "text": "true"
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    },
                                                                                                    "rhs": {
                                                                                                        "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                                        "expression": {
                                                                                                            "type": "com.wgslfuzz.core.Expression.BoolLiteral",
                                                                                                            "text": "false"
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "rhs": {
                                                                                        "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                        "expression": {
                                                                                            "type": "com.wgslfuzz.core.Expression.BoolLiteral",
                                                                                            "text": "false"
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            "rhs": {
                                                                                "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                "expression": {
                                                                                    "type": "com.wgslfuzz.core.Expression.Unary",
                                                                                    "operator": "LOGICAL_NOT",
                                                                                    "target": {
                                                                                        "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                        "expression": {
                                                                                            "type": "com.wgslfuzz.core.Expression.BoolLiteral",
                                                                                            "text": "true"
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "rhs": {
                                                                        "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                        "expression": {
                                                                            "type": "com.wgslfuzz.core.Expression.Binary",
                                                                            "operator": "SHORT_CIRCUIT_AND",
                                                                            "lhs": {
                                                                                "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                "expression": {
                                                                                    "type": "com.wgslfuzz.core.Expression.BoolLiteral",
                                                                                    "text": "false"
                                                                                }
                                                                            },
                                                                            "rhs": {
                                                                                "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                "expression": {
                                                                                    "type": "com.wgslfuzz.core.Expression.BoolLiteral",
                                                                                    "text": "true"
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "thenBranch": {
                                                "statements": [
                                                    {
                                                        "type": "com.wgslfuzz.core.Statement.Continue"
                                                    }
                                                ]
                                            },
                                            "elseBranch": {
                                                "type": "com.wgslfuzz.core.Statement.Compound",
                                                "statements": []
                                            }
                                        }
                                    },
                                    {
                                        "type": "com.wgslfuzz.core.Statement.Assignment",
                                        "lhsExpression": {
                                            "type": "com.wgslfuzz.core.LhsExpression.IndexLookup",
                                            "target": {
                                                "type": "com.wgslfuzz.core.LhsExpression.Identifier",
                                                "name": "dp"
                                            },
                                            "index": {
                                                "type": "com.wgslfuzz.core.Expression.Binary",
                                                "operator": "PLUS",
                                                "lhs": {
                                                    "type": "com.wgslfuzz.core.Expression.Identifier",
                                                    "name": "index"
                                                },
                                                "rhs": {
                                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                                    "text": "2"
                                                }
                                            }
                                        },
                                        "assignmentOperator": "EQUAL",
                                        "rhs": {
                                            "type": "com.wgslfuzz.core.Expression.FunctionCall",
                                            "callee": "getBottomHalf",
                                            "args": [
                                                {
                                                    "type": "com.wgslfuzz.core.Expression.MemberLookup",
                                                    "receiver": {
                                                        "type": "com.wgslfuzz.core.Expression.IndexLookup",
                                                        "target": {
                                                            "type": "com.wgslfuzz.core.Expression.Identifier",
                                                            "name": "dpInput"
                                                        },
                                                        "index": {
                                                            "type": "com.wgslfuzz.core.Expression.Identifier",
                                                            "name": "i"
                                                        }
                                                    },
                                                    "memberName": "y"
                                                }
                                            ]
                                        }
                                    },
                                    {
                                        "type": "com.wgslfuzz.core.AugmentedStatement.DeadCodeFragment",
                                        "statement": {
                                            "type": "com.wgslfuzz.core.Statement.If",
                                            "condition": {
                                                "type": "com.wgslfuzz.core.AugmentedExpression.FalseByConstruction",
                                                "falseExpression": {
                                                    "type": "com.wgslfuzz.core.Expression.Binary",
                                                    "operator": "SHORT_CIRCUIT_AND",
                                                    "lhs": {
                                                        "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                        "expression": {
                                                            "type": "com.wgslfuzz.core.Expression.Binary",
                                                            "operator": "SHORT_CIRCUIT_OR",
                                                            "lhs": {
                                                                "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                "expression": {
                                                                    "type": "com.wgslfuzz.core.Expression.Binary",
                                                                    "operator": "SHORT_CIRCUIT_OR",
                                                                    "lhs": {
                                                                        "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                        "expression": {
                                                                            "type": "com.wgslfuzz.core.Expression.Binary",
                                                                            "operator": "SHORT_CIRCUIT_OR",
                                                                            "lhs": {
                                                                                "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                "expression": {
                                                                                    "type": "com.wgslfuzz.core.Expression.BoolLiteral",
                                                                                    "text": "false"
                                                                                }
                                                                            },
                                                                            "rhs": {
                                                                                "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                "expression": {
                                                                                    "type": "com.wgslfuzz.core.Expression.BoolLiteral",
                                                                                    "text": "true"
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "rhs": {
                                                                        "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                        "expression": {
                                                                            "type": "com.wgslfuzz.core.Expression.Binary",
                                                                            "operator": "SHORT_CIRCUIT_AND",
                                                                            "lhs": {
                                                                                "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                "expression": {
                                                                                    "type": "com.wgslfuzz.core.Expression.Binary",
                                                                                    "operator": "SHORT_CIRCUIT_AND",
                                                                                    "lhs": {
                                                                                        "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                        "expression": {
                                                                                            "type": "com.wgslfuzz.core.Expression.BoolLiteral",
                                                                                            "text": "true"
                                                                                        }
                                                                                    },
                                                                                    "rhs": {
                                                                                        "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                        "expression": {
                                                                                            "type": "com.wgslfuzz.core.Expression.Binary",
                                                                                            "operator": "SHORT_CIRCUIT_OR",
                                                                                            "lhs": {
                                                                                                "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                                "expression": {
                                                                                                    "type": "com.wgslfuzz.core.Expression.Binary",
                                                                                                    "operator": "SHORT_CIRCUIT_OR",
                                                                                                    "lhs": {
                                                                                                        "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                                        "expression": {
                                                                                                            "type": "com.wgslfuzz.core.Expression.BoolLiteral",
                                                                                                            "text": "true"
                                                                                                        }
                                                                                                    },
                                                                                                    "rhs": {
                                                                                                        "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                                        "expression": {
                                                                                                            "type": "com.wgslfuzz.core.Expression.Binary",
                                                                                                            "operator": "SHORT_CIRCUIT_AND",
                                                                                                            "lhs": {
                                                                                                                "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                                                "expression": {
                                                                                                                    "type": "com.wgslfuzz.core.Expression.BoolLiteral",
                                                                                                                    "text": "true"
                                                                                                                }
                                                                                                            },
                                                                                                            "rhs": {
                                                                                                                "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                                                "expression": {
                                                                                                                    "type": "com.wgslfuzz.core.Expression.Binary",
                                                                                                                    "operator": "SHORT_CIRCUIT_AND",
                                                                                                                    "lhs": {
                                                                                                                        "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                                                        "expression": {
                                                                                                                            "type": "com.wgslfuzz.core.Expression.Binary",
                                                                                                                            "operator": "SHORT_CIRCUIT_OR",
                                                                                                                            "lhs": {
                                                                                                                                "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                                                                "expression": {
                                                                                                                                    "type": "com.wgslfuzz.core.Expression.BoolLiteral",
                                                                                                                                    "text": "true"
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "rhs": {
                                                                                                                                "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                                                                "expression": {
                                                                                                                                    "type": "com.wgslfuzz.core.Expression.BoolLiteral",
                                                                                                                                    "text": "true"
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    },
                                                                                                                    "rhs": {
                                                                                                                        "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                                                        "expression": {
                                                                                                                            "type": "com.wgslfuzz.core.Expression.BoolLiteral",
                                                                                                                            "text": "false"
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "rhs": {
                                                                                                "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                                "expression": {
                                                                                                    "type": "com.wgslfuzz.core.Expression.BoolLiteral",
                                                                                                    "text": "true"
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            },
                                                                            "rhs": {
                                                                                "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                "expression": {
                                                                                    "type": "com.wgslfuzz.core.Expression.Binary",
                                                                                    "operator": "SHORT_CIRCUIT_AND",
                                                                                    "lhs": {
                                                                                        "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                        "expression": {
                                                                                            "type": "com.wgslfuzz.core.Expression.Binary",
                                                                                            "operator": "SHORT_CIRCUIT_OR",
                                                                                            "lhs": {
                                                                                                "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                                "expression": {
                                                                                                    "type": "com.wgslfuzz.core.Expression.BoolLiteral",
                                                                                                    "text": "true"
                                                                                                }
                                                                                            },
                                                                                            "rhs": {
                                                                                                "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                                "expression": {
                                                                                                    "type": "com.wgslfuzz.core.Expression.BoolLiteral",
                                                                                                    "text": "false"
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "rhs": {
                                                                                        "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                        "expression": {
                                                                                            "type": "com.wgslfuzz.core.Expression.BoolLiteral",
                                                                                            "text": "true"
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "rhs": {
                                                                "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                "expression": {
                                                                    "type": "com.wgslfuzz.core.Expression.Binary",
                                                                    "operator": "SHORT_CIRCUIT_OR",
                                                                    "lhs": {
                                                                        "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                        "expression": {
                                                                            "type": "com.wgslfuzz.core.Expression.Binary",
                                                                            "operator": "SHORT_CIRCUIT_AND",
                                                                            "lhs": {
                                                                                "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                "expression": {
                                                                                    "type": "com.wgslfuzz.core.Expression.BoolLiteral",
                                                                                    "text": "true"
                                                                                }
                                                                            },
                                                                            "rhs": {
                                                                                "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                "expression": {
                                                                                    "type": "com.wgslfuzz.core.Expression.Binary",
                                                                                    "operator": "SHORT_CIRCUIT_OR",
                                                                                    "lhs": {
                                                                                        "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                        "expression": {
                                                                                            "type": "com.wgslfuzz.core.Expression.BoolLiteral",
                                                                                            "text": "false"
                                                                                        }
                                                                                    },
                                                                                    "rhs": {
                                                                                        "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                        "expression": {
                                                                                            "type": "com.wgslfuzz.core.Expression.Unary",
                                                                                            "operator": "LOGICAL_NOT",
                                                                                            "target": {
                                                                                                "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                                "expression": {
                                                                                                    "type": "com.wgslfuzz.core.Expression.BoolLiteral",
                                                                                                    "text": "false"
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "rhs": {
                                                                        "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                        "expression": {
                                                                            "type": "com.wgslfuzz.core.Expression.Unary",
                                                                            "operator": "LOGICAL_NOT",
                                                                            "target": {
                                                                                "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                "expression": {
                                                                                    "type": "com.wgslfuzz.core.Expression.Binary",
                                                                                    "operator": "SHORT_CIRCUIT_AND",
                                                                                    "lhs": {
                                                                                        "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                        "expression": {
                                                                                            "type": "com.wgslfuzz.core.Expression.BoolLiteral",
                                                                                            "text": "false"
                                                                                        }
                                                                                    },
                                                                                    "rhs": {
                                                                                        "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                        "expression": {
                                                                                            "type": "com.wgslfuzz.core.Expression.Binary",
                                                                                            "operator": "SHORT_CIRCUIT_OR",
                                                                                            "lhs": {
                                                                                                "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                                "expression": {
                                                                                                    "type": "com.wgslfuzz.core.Expression.Binary",
                                                                                                    "operator": "SHORT_CIRCUIT_AND",
                                                                                                    "lhs": {
                                                                                                        "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                                        "expression": {
                                                                                                            "type": "com.wgslfuzz.core.Expression.Binary",
                                                                                                            "operator": "SHORT_CIRCUIT_OR",
                                                                                                            "lhs": {
                                                                                                                "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                                                "expression": {
                                                                                                                    "type": "com.wgslfuzz.core.Expression.Binary",
                                                                                                                    "operator": "SHORT_CIRCUIT_OR",
                                                                                                                    "lhs": {
                                                                                                                        "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                                                        "expression": {
                                                                                                                            "type": "com.wgslfuzz.core.Expression.BoolLiteral",
                                                                                                                            "text": "false"
                                                                                                                        }
                                                                                                                    },
                                                                                                                    "rhs": {
                                                                                                                        "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                                                        "expression": {
                                                                                                                            "type": "com.wgslfuzz.core.Expression.BoolLiteral",
                                                                                                                            "text": "true"
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            },
                                                                                                            "rhs": {
                                                                                                                "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                                                "expression": {
                                                                                                                    "type": "com.wgslfuzz.core.Expression.Binary",
                                                                                                                    "operator": "SHORT_CIRCUIT_AND",
                                                                                                                    "lhs": {
                                                                                                                        "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                                                        "expression": {
                                                                                                                            "type": "com.wgslfuzz.core.Expression.Binary",
                                                                                                                            "operator": "SHORT_CIRCUIT_OR",
                                                                                                                            "lhs": {
                                                                                                                                "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                                                                "expression": {
                                                                                                                                    "type": "com.wgslfuzz.core.Expression.BoolLiteral",
                                                                                                                                    "text": "true"
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "rhs": {
                                                                                                                                "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                                                                "expression": {
                                                                                                                                    "type": "com.wgslfuzz.core.Expression.BoolLiteral",
                                                                                                                                    "text": "false"
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    },
                                                                                                                    "rhs": {
                                                                                                                        "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                                                        "expression": {
                                                                                                                            "type": "com.wgslfuzz.core.Expression.BoolLiteral",
                                                                                                                            "text": "false"
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    },
                                                                                                    "rhs": {
                                                                                                        "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                                        "expression": {
                                                                                                            "type": "com.wgslfuzz.core.Expression.Binary",
                                                                                                            "operator": "SHORT_CIRCUIT_OR",
                                                                                                            "lhs": {
                                                                                                                "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                                                "expression": {
                                                                                                                    "type": "com.wgslfuzz.core.Expression.Binary",
                                                                                                                    "operator": "SHORT_CIRCUIT_OR",
                                                                                                                    "lhs": {
                                                                                                                        "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                                                        "expression": {
                                                                                                                            "type": "com.wgslfuzz.core.Expression.Binary",
                                                                                                                            "operator": "SHORT_CIRCUIT_AND",
                                                                                                                            "lhs": {
                                                                                                                                "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                                                                "expression": {
                                                                                                                                    "type": "com.wgslfuzz.core.Expression.BoolLiteral",
                                                                                                                                    "text": "true"
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "rhs": {
                                                                                                                                "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                                                                "expression": {
                                                                                                                                    "type": "com.wgslfuzz.core.Expression.Unary",
                                                                                                                                    "operator": "LOGICAL_NOT",
                                                                                                                                    "target": {
                                                                                                                                        "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                                                                        "expression": {
                                                                                                                                            "type": "com.wgslfuzz.core.Expression.BoolLiteral",
                                                                                                                                            "text": "true"
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    },
                                                                                                                    "rhs": {
                                                                                                                        "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                                                        "expression": {
                                                                                                                            "type": "com.wgslfuzz.core.Expression.BoolLiteral",
                                                                                                                            "text": "true"
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            },
                                                                                                            "rhs": {
                                                                                                                "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                                                "expression": {
                                                                                                                    "type": "com.wgslfuzz.core.Expression.Unary",
                                                                                                                    "operator": "LOGICAL_NOT",
                                                                                                                    "target": {
                                                                                                                        "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                                                        "expression": {
                                                                                                                            "type": "com.wgslfuzz.core.Expression.Binary",
                                                                                                                            "operator": "SHORT_CIRCUIT_OR",
                                                                                                                            "lhs": {
                                                                                                                                "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                                                                "expression": {
                                                                                                                                    "type": "com.wgslfuzz.core.Expression.Binary",
                                                                                                                                    "operator": "SHORT_CIRCUIT_OR",
                                                                                                                                    "lhs": {
                                                                                                                                        "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                                                                        "expression": {
                                                                                                                                            "type": "com.wgslfuzz.core.Expression.BoolLiteral",
                                                                                                                                            "text": "false"
                                                                                                                                        }
                                                                                                                                    },
                                                                                                                                    "rhs": {
                                                                                                                                        "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                                                                        "expression": {
                                                                                                                                            "type": "com.wgslfuzz.core.Expression.Binary",
                                                                                                                                            "operator": "SHORT_CIRCUIT_OR",
                                                                                                                                            "lhs": {
                                                                                                                                                "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                                                                                "expression": {
                                                                                                                                                    "type": "com.wgslfuzz.core.Expression.BoolLiteral",
                                                                                                                                                    "text": "false"
                                                                                                                                                }
                                                                                                                                            },
                                                                                                                                            "rhs": {
                                                                                                                                                "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                                                                                "expression": {
                                                                                                                                                    "type": "com.wgslfuzz.core.Expression.Binary",
                                                                                                                                                    "operator": "SHORT_CIRCUIT_OR",
                                                                                                                                                    "lhs": {
                                                                                                                                                        "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                                                                                        "expression": {
                                                                                                                                                            "type": "com.wgslfuzz.core.Expression.BoolLiteral",
                                                                                                                                                            "text": "true"
                                                                                                                                                        }
                                                                                                                                                    },
                                                                                                                                                    "rhs": {
                                                                                                                                                        "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                                                                                        "expression": {
                                                                                                                                                            "type": "com.wgslfuzz.core.Expression.BoolLiteral",
                                                                                                                                                            "text": "false"
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            },
                                                                                                                            "rhs": {
                                                                                                                                "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                                                                "expression": {
                                                                                                                                    "type": "com.wgslfuzz.core.Expression.BoolLiteral",
                                                                                                                                    "text": "true"
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            },
                                                                                            "rhs": {
                                                                                                "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                                "expression": {
                                                                                                    "type": "com.wgslfuzz.core.Expression.Binary",
                                                                                                    "operator": "SHORT_CIRCUIT_AND",
                                                                                                    "lhs": {
                                                                                                        "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                                        "expression": {
                                                                                                            "type": "com.wgslfuzz.core.Expression.Unary",
                                                                                                            "operator": "LOGICAL_NOT",
                                                                                                            "target": {
                                                                                                                "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                                                "expression": {
                                                                                                                    "type": "com.wgslfuzz.core.Expression.BoolLiteral",
                                                                                                                    "text": "true"
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    },
                                                                                                    "rhs": {
                                                                                                        "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                                        "expression": {
                                                                                                            "type": "com.wgslfuzz.core.Expression.BoolLiteral",
                                                                                                            "text": "true"
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "rhs": {
                                                        "type": "com.wgslfuzz.core.AugmentedExpression.FalseByConstruction",
                                                        "falseExpression": {
                                                            "type": "com.wgslfuzz.core.Expression.Binary",
                                                            "operator": "SHORT_CIRCUIT_AND",
                                                            "lhs": {
                                                                "type": "com.wgslfuzz.core.AugmentedExpression.FalseByConstruction",
                                                                "falseExpression": {
                                                                    "type": "com.wgslfuzz.core.Expression.Binary",
                                                                    "operator": "GREATER_THAN",
                                                                    "lhs": {
                                                                        "type": "com.wgslfuzz.core.Expression.IndexLookup",
                                                                        "target": {
                                                                            "type": "com.wgslfuzz.core.Expression.IndexLookup",
                                                                            "target": {
                                                                                "type": "com.wgslfuzz.core.Expression.Identifier",
                                                                                "name": "dpInput"
                                                                            },
                                                                            "index": {
                                                                                "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                                                                "text": "1"
                                                                            }
                                                                        },
                                                                        "index": {
                                                                            "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                                                            "text": "0"
                                                                        }
                                                                    },
                                                                    "rhs": {
                                                                        "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                                                        "text": "12255423"
                                                                    }
                                                                }
                                                            },
                                                            "rhs": {
                                                                "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                "expression": {
                                                                    "type": "com.wgslfuzz.core.Expression.Binary",
                                                                    "operator": "SHORT_CIRCUIT_AND",
                                                                    "lhs": {
                                                                        "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                        "expression": {
                                                                            "type": "com.wgslfuzz.core.Expression.Unary",
                                                                            "operator": "LOGICAL_NOT",
                                                                            "target": {
                                                                                "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                "expression": {
                                                                                    "type": "com.wgslfuzz.core.Expression.Unary",
                                                                                    "operator": "LOGICAL_NOT",
                                                                                    "target": {
                                                                                        "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                        "expression": {
                                                                                            "type": "com.wgslfuzz.core.Expression.BoolLiteral",
                                                                                            "text": "false"
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "rhs": {
                                                                        "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                        "expression": {
                                                                            "type": "com.wgslfuzz.core.Expression.Binary",
                                                                            "operator": "SHORT_CIRCUIT_OR",
                                                                            "lhs": {
                                                                                "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                "expression": {
                                                                                    "type": "com.wgslfuzz.core.Expression.BoolLiteral",
                                                                                    "text": "true"
                                                                                }
                                                                            },
                                                                            "rhs": {
                                                                                "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                                "expression": {
                                                                                    "type": "com.wgslfuzz.core.Expression.BoolLiteral",
                                                                                    "text": "false"
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "thenBranch": {
                                                "statements": [
                                                    {
                                                        "type": "com.wgslfuzz.core.Statement.Continue"
                                                    }
                                                ]
                                            }
                                        }
                                    },
                                    {
                                        "type": "com.wgslfuzz.core.Statement.Assignment",
                                        "lhsExpression": {
                                            "type": "com.wgslfuzz.core.LhsExpression.IndexLookup",
                                            "target": {
                                                "type": "com.wgslfuzz.core.LhsExpression.Identifier",
                                                "name": "dp"
                                            },
                                            "index": {
                                                "type": "com.wgslfuzz.core.Expression.Binary",
                                                "operator": "PLUS",
                                                "lhs": {
                                                    "type": "com.wgslfuzz.core.Expression.Identifier",
                                                    "name": "index"
                                                },
                                                "rhs": {
                                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                                    "text": "3"
                                                }
                                            }
                                        },
                                        "assignmentOperator": "EQUAL",
                                        "rhs": {
                                            "type": "com.wgslfuzz.core.Expression.FunctionCall",
                                            "callee": "getTopHalf",
                                            "args": [
                                                {
                                                    "type": "com.wgslfuzz.core.Expression.MemberLookup",
                                                    "receiver": {
                                                        "type": "com.wgslfuzz.core.Expression.IndexLookup",
                                                        "target": {
                                                            "type": "com.wgslfuzz.core.Expression.Identifier",
                                                            "name": "dpInput"
                                                        },
                                                        "index": {
                                                            "type": "com.wgslfuzz.core.Expression.Identifier",
                                                            "name": "i"
                                                        }
                                                    },
                                                    "memberName": "y"
                                                }
                                            ]
                                        }
                                    },
                                    {
                                        "type": "com.wgslfuzz.core.Statement.Assignment",
                                        "lhsExpression": {
                                            "type": "com.wgslfuzz.core.LhsExpression.IndexLookup",
                                            "target": {
                                                "type": "com.wgslfuzz.core.LhsExpression.Identifier",
                                                "name": "dp"
                                            },
                                            "index": {
                                                "type": "com.wgslfuzz.core.Expression.Binary",
                                                "operator": "PLUS",
                                                "lhs": {
                                                    "type": "com.wgslfuzz.core.Expression.Identifier",
                                                    "name": "index"
                                                },
                                                "rhs": {
                                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                                    "text": "4"
                                                }
                                            }
                                        },
                                        "assignmentOperator": "EQUAL",
                                        "rhs": {
                                            "type": "com.wgslfuzz.core.Expression.FunctionCall",
                                            "callee": "getBottomHalf",
                                            "args": [
                                                {
                                                    "type": "com.wgslfuzz.core.Expression.MemberLookup",
                                                    "receiver": {
                                                        "type": "com.wgslfuzz.core.Expression.IndexLookup",
                                                        "target": {
                                                            "type": "com.wgslfuzz.core.Expression.Identifier",
                                                            "name": "dpInput"
                                                        },
                                                        "index": {
                                                            "type": "com.wgslfuzz.core.Expression.Identifier",
                                                            "name": "i"
                                                        }
                                                    },
                                                    "memberName": "z"
                                                }
                                            ]
                                        }
                                    },
                                    {
                                        "type": "com.wgslfuzz.core.AugmentedStatement.DeadCodeFragment",
                                        "statement": {
                                            "type": "com.wgslfuzz.core.Statement.If",
                                            "condition": {
                                                "type": "com.wgslfuzz.core.AugmentedExpression.FalseByConstruction",
                                                "falseExpression": {
                                                    "type": "com.wgslfuzz.core.Expression.Binary",
                                                    "operator": "LESS_THAN",
                                                    "lhs": {
                                                        "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                                        "text": "7733377"
                                                    },
                                                    "rhs": {
                                                        "type": "com.wgslfuzz.core.Expression.IndexLookup",
                                                        "target": {
                                                            "type": "com.wgslfuzz.core.Expression.IndexLookup",
                                                            "target": {
                                                                "type": "com.wgslfuzz.core.Expression.Identifier",
                                                                "name": "dpInput"
                                                            },
                                                            "index": {
                                                                "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                                                "text": "17"
                                                            }
                                                        },
                                                        "index": {
                                                            "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                                            "text": "0"
                                                        }
                                                    }
                                                }
                                            },
                                            "thenBranch": {
                                                "statements": [
                                                    {
                                                        "type": "com.wgslfuzz.core.Statement.Continue"
                                                    }
                                                ]
                                            }
                                        }
                                    },
                                    {
                                        "type": "com.wgslfuzz.core.Statement.Assignment",
                                        "lhsExpression": {
                                            "type": "com.wgslfuzz.core.LhsExpression.IndexLookup",
                                            "target": {
                                                "type": "com.wgslfuzz.core.LhsExpression.Identifier",
                                                "name": "dp"
                                            },
                                            "index": {
                                                "type": "com.wgslfuzz.core.Expression.Binary",
                                                "operator": "PLUS",
                                                "lhs": {
                                                    "type": "com.wgslfuzz.core.Expression.Identifier",
                                                    "name": "index"
                                                },
                                                "rhs": {
                                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                                    "text": "5"
                                                }
                                            }
                                        },
                                        "assignmentOperator": "EQUAL",
                                        "rhs": {
                                            "type": "com.wgslfuzz.core.Expression.FunctionCall",
                                            "callee": "getTopHalf",
                                            "args": [
                                                {
                                                    "type": "com.wgslfuzz.core.Expression.MemberLookup",
                                                    "receiver": {
                                                        "type": "com.wgslfuzz.core.Expression.IndexLookup",
                                                        "target": {
                                                            "type": "com.wgslfuzz.core.Expression.Identifier",
                                                            "name": "dpInput"
                                                        },
                                                        "index": {
                                                            "type": "com.wgslfuzz.core.Expression.Identifier",
                                                            "name": "i"
                                                        }
                                                    },
                                                    "memberName": "z"
                                                }
                                            ]
                                        }
                                    },
                                    {
                                        "type": "com.wgslfuzz.core.AugmentedStatement.DeadCodeFragment",
                                        "statement": {
                                            "type": "com.wgslfuzz.core.Statement.If",
                                            "condition": {
                                                "type": "com.wgslfuzz.core.AugmentedExpression.TrueByConstruction",
                                                "trueExpression": {
                                                    "type": "com.wgslfuzz.core.Expression.Unary",
                                                    "operator": "LOGICAL_NOT",
                                                    "target": {
                                                        "type": "com.wgslfuzz.core.AugmentedExpression.FalseByConstruction",
                                                        "falseExpression": {
                                                            "type": "com.wgslfuzz.core.Expression.Binary",
                                                            "operator": "SHORT_CIRCUIT_AND",
                                                            "lhs": {
                                                                "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                                "expression": {
                                                                    "type": "com.wgslfuzz.core.Expression.BoolLiteral",
                                                                    "text": "false"
                                                                }
                                                            },
                                                            "rhs": {
                                                                "type": "com.wgslfuzz.core.AugmentedExpression.FalseByConstruction",
                                                                "falseExpression": {
                                                                    "type": "com.wgslfuzz.core.Expression.Unary",
                                                                    "operator": "LOGICAL_NOT",
                                                                    "target": {
                                                                        "type": "com.wgslfuzz.core.AugmentedExpression.TrueByConstruction",
                                                                        "trueExpression": {
                                                                            "type": "com.wgslfuzz.core.Expression.BoolLiteral",
                                                                            "text": "true"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "thenBranch": {
                                                "statements": []
                                            },
                                            "elseBranch": {
                                                "type": "com.wgslfuzz.core.Statement.Compound",
                                                "statements": [
                                                    {
                                                        "type": "com.wgslfuzz.core.Statement.Continue"
                                                    }
                                                ]
                                            }
                                        }
                                    },
                                    {
                                        "type": "com.wgslfuzz.core.Statement.Assignment",
                                        "lhsExpression": {
                                            "type": "com.wgslfuzz.core.LhsExpression.IndexLookup",
                                            "target": {
                                                "type": "com.wgslfuzz.core.LhsExpression.Identifier",
                                                "name": "dp"
                                            },
                                            "index": {
                                                "type": "com.wgslfuzz.core.Expression.Binary",
                                                "operator": "PLUS",
                                                "lhs": {
                                                    "type": "com.wgslfuzz.core.Expression.Identifier",
                                                    "name": "index"
                                                },
                                                "rhs": {
                                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                                    "text": "6"
                                                }
                                            }
                                        },
                                        "assignmentOperator": "EQUAL",
                                        "rhs": {
                                            "type": "com.wgslfuzz.core.Expression.FunctionCall",
                                            "callee": "getBottomHalf",
                                            "args": [
                                                {
                                                    "type": "com.wgslfuzz.core.Expression.MemberLookup",
                                                    "receiver": {
                                                        "type": "com.wgslfuzz.core.Expression.IndexLookup",
                                                        "target": {
                                                            "type": "com.wgslfuzz.core.Expression.Identifier",
                                                            "name": "dpInput"
                                                        },
                                                        "index": {
                                                            "type": "com.wgslfuzz.core.Expression.Identifier",
                                                            "name": "i"
                                                        }
                                                    },
                                                    "memberName": "w"
                                                }
                                            ]
                                        }
                                    },
                                    {
                                        "type": "com.wgslfuzz.core.AugmentedStatement.DeadCodeFragment",
                                        "statement": {
                                            "type": "com.wgslfuzz.core.Statement.If",
                                            "condition": {
                                                "type": "com.wgslfuzz.core.AugmentedExpression.TrueByConstruction",
                                                "trueExpression": {
                                                    "type": "com.wgslfuzz.core.Expression.Binary",
                                                    "operator": "SHORT_CIRCUIT_OR",
                                                    "lhs": {
                                                        "type": "com.wgslfuzz.core.AugmentedExpression.TrueByConstruction",
                                                        "trueExpression": {
                                                            "type": "com.wgslfuzz.core.Expression.Binary",
                                                            "operator": "LESS_THAN_EQUAL",
                                                            "lhs": {
                                                                "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                                                "text": "12255423"
                                                            },
                                                            "rhs": {
                                                                "type": "com.wgslfuzz.core.Expression.IndexLookup",
                                                                "target": {
                                                                    "type": "com.wgslfuzz.core.Expression.IndexLookup",
                                                                    "target": {
                                                                        "type": "com.wgslfuzz.core.Expression.Identifier",
                                                                        "name": "dpInput"
                                                                    },
                                                                    "index": {
                                                                        "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                                                        "text": "1"
                                                                    }
                                                                },
                                                                "index": {
                                                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                                                    "text": "0"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "rhs": {
                                                        "type": "com.wgslfuzz.core.AugmentedExpression.ArbitraryExpression",
                                                        "expression": {
                                                            "type": "com.wgslfuzz.core.Expression.BoolLiteral",
                                                            "text": "false"
                                                        }
                                                    }
                                                }
                                            },
                                            "thenBranch": {
                                                "statements": []
                                            },
                                            "elseBranch": {
                                                "type": "com.wgslfuzz.core.Statement.Compound",
                                                "statements": [
                                                    {
                                                        "type": "com.wgslfuzz.core.Statement.Continue"
                                                    }
                                                ]
                                            }
                                        }
                                    },
                                    {
                                        "type": "com.wgslfuzz.core.Statement.Assignment",
                                        "lhsExpression": {
                                            "type": "com.wgslfuzz.core.LhsExpression.IndexLookup",
                                            "target": {
                                                "type": "com.wgslfuzz.core.LhsExpression.Identifier",
                                                "name": "dp"
                                            },
                                            "index": {
                                                "type": "com.wgslfuzz.core.Expression.Binary",
                                                "operator": "PLUS",
                                                "lhs": {
                                                    "type": "com.wgslfuzz.core.Expression.Identifier",
                                                    "name": "index"
                                                },
                                                "rhs": {
                                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                                    "text": "7"
                                                }
                                            }
                                        },
                                        "assignmentOperator": "EQUAL",
                                        "rhs": {
                                            "type": "com.wgslfuzz.core.Expression.FunctionCall",
                                            "callee": "getTopHalf",
                                            "args": [
                                                {
                                                    "type": "com.wgslfuzz.core.Expression.MemberLookup",
                                                    "receiver": {
                                                        "type": "com.wgslfuzz.core.Expression.IndexLookup",
                                                        "target": {
                                                            "type": "com.wgslfuzz.core.Expression.Identifier",
                                                            "name": "dpInput"
                                                        },
                                                        "index": {
                                                            "type": "com.wgslfuzz.core.Expression.Identifier",
                                                            "name": "i"
                                                        }
                                                    },
                                                    "memberName": "w"
                                                }
                                            ]
                                        }
                                    },
                                    {
                                        "type": "com.wgslfuzz.core.AugmentedStatement.DeadCodeFragment",
                                        "statement": {
                                            "type": "com.wgslfuzz.core.Statement.If",
                                            "condition": {
                                                "type": "com.wgslfuzz.core.AugmentedExpression.FalseByConstruction",
                                                "falseExpression": {
                                                    "type": "com.wgslfuzz.core.Expression.Binary",
                                                    "operator": "GREATER_THAN",
                                                    "lhs": {
                                                        "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                                        "text": "256"
                                                    },
                                                    "rhs": {
                                                        "type": "com.wgslfuzz.core.Expression.IndexLookup",
                                                        "target": {
                                                            "type": "com.wgslfuzz.core.Expression.Identifier",
                                                            "name": "resolution"
                                                        },
                                                        "index": {
                                                            "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                                            "text": "0"
                                                        }
                                                    }
                                                }
                                            },
                                            "thenBranch": {
                                                "statements": [
                                                    {
                                                        "type": "com.wgslfuzz.core.Statement.Continue"
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "type": "com.wgslfuzz.core.Statement.Value",
                            "isConst": false,
                            "name": "pos",
                            "initializer": {
                                "type": "com.wgslfuzz.core.Expression.Binary",
                                "operator": "DIVIDE",
                                "lhs": {
                                    "type": "com.wgslfuzz.core.Expression.MemberLookup",
                                    "receiver": {
                                        "type": "com.wgslfuzz.core.Expression.Identifier",
                                        "name": "gl_FragCoord"
                                    },
                                    "memberName": "xy"
                                },
                                "rhs": {
                                    "type": "com.wgslfuzz.core.Expression.Vec2ValueConstructor",
                                    "elementType": {
                                        "type": "com.wgslfuzz.core.TypeDecl.F32"
                                    },
                                    "args": [
                                        {
                                            "type": "com.wgslfuzz.core.Expression.Identifier",
                                            "name": "resolution"
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "type": "com.wgslfuzz.core.Statement.Value",
                            "isConst": false,
                            "name": "ipos",
                            "typeDecl": {
                                "type": "com.wgslfuzz.core.TypeDecl.NamedType",
                                "name": "vec2i"
                            },
                            "initializer": {
                                "type": "com.wgslfuzz.core.Expression.FunctionCall",
                                "callee": "vec2i",
                                "args": [
                                    {
                                        "type": "com.wgslfuzz.core.Expression.Binary",
                                        "operator": "TIMES",
                                        "lhs": {
                                            "type": "com.wgslfuzz.core.Expression.Identifier",
                                            "name": "pos"
                                        },
                                        "rhs": {
                                            "type": "com.wgslfuzz.core.Expression.Vec2ValueConstructor",
                                            "args": [
                                                {
                                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                                    "text": "256"
                                                },
                                                {
                                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                                    "text": "256"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "type": "com.wgslfuzz.core.Statement.Return",
                            "expression": {
                                "type": "com.wgslfuzz.core.Expression.FunctionCall",
                                "callee": "trace",
                                "args": [
                                    {
                                        "type": "com.wgslfuzz.core.Expression.Identifier",
                                        "name": "ipos"
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        ]
    },
    "pipelineState": {
        "uniformValues": {
            "0": {
                "0": {
                    "type": "com.wgslfuzz.core.Expression.Vec2ValueConstructor",
                    "args": [
                        {
                            "type": "com.wgslfuzz.core.Expression.IntLiteral",
                            "text": "256"
                        },
                        {
                            "type": "com.wgslfuzz.core.Expression.IntLiteral",
                            "text": "256"
                        }
                    ]
                },
                "1": {
                    "type": "com.wgslfuzz.core.Expression.ArrayValueConstructor",
                    "elementType": {
                        "type": "com.wgslfuzz.core.TypeDecl.Vec4",
                        "elementType": {
                            "type": "com.wgslfuzz.core.TypeDecl.I32"
                        }
                    },
                    "elementCount": {
                        "type": "com.wgslfuzz.core.Expression.IntLiteral",
                        "text": "32"
                    },
                    "args": [
                        {
                            "type": "com.wgslfuzz.core.Expression.Vec4ValueConstructor",
                            "args": [
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "8716403"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "10748054"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "12058800"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "12583102"
                                }
                            ]
                        },
                        {
                            "type": "com.wgslfuzz.core.Expression.Vec4ValueConstructor",
                            "args": [
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "12255423"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "11272373"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "10027171"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "8781967"
                                }
                            ]
                        },
                        {
                            "type": "com.wgslfuzz.core.Expression.Vec4ValueConstructor",
                            "args": [
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "7864446"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "7471220"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "7667826"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "8323193"
                                }
                            ]
                        },
                        {
                            "type": "com.wgslfuzz.core.Expression.Vec4ValueConstructor",
                            "args": [
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "9240710"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "10092692"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "10616991"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "10551459"
                                }
                            ]
                        },
                        {
                            "type": "com.wgslfuzz.core.Expression.Vec4ValueConstructor",
                            "args": [
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "9896093"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "8781967"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "7405692"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "6160487"
                                }
                            ]
                        },
                        {
                            "type": "com.wgslfuzz.core.Expression.Vec4ValueConstructor",
                            "args": [
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "5374039"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "5242959"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "5963860"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "7471205"
                                }
                            ]
                        },
                        {
                            "type": "com.wgslfuzz.core.Expression.Vec4ValueConstructor",
                            "args": [
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "9568386"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "11927716"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "14090439"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "15728869"
                                }
                            ]
                        },
                        {
                            "type": "com.wgslfuzz.core.Expression.Vec4ValueConstructor",
                            "args": [
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "16646393"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "16646400"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "15925498"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "14614761"
                                }
                            ]
                        },
                        {
                            "type": "com.wgslfuzz.core.Expression.Vec4ValueConstructor",
                            "args": [
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "13107412"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "11796670"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "10879148"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "10551459"
                                }
                            ]
                        },
                        {
                            "type": "com.wgslfuzz.core.Expression.Vec4ValueConstructor",
                            "args": [
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "10748066"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "11403433"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "12124339"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "12648638"
                                }
                            ]
                        },
                        {
                            "type": "com.wgslfuzz.core.Expression.Vec4ValueConstructor",
                            "args": [
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "12779715"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "12320960"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "11206836"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "9765025"
                                }
                            ]
                        },
                        {
                            "type": "com.wgslfuzz.core.Expression.Vec4ValueConstructor",
                            "args": [
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "8192137"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "6881394"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "6094945"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "6094939"
                                }
                            ]
                        },
                        {
                            "type": "com.wgslfuzz.core.Expression.Vec4ValueConstructor",
                            "args": [
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "6946914"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "8519797"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "10551441"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "12648625"
                                }
                            ]
                        },
                        {
                            "type": "com.wgslfuzz.core.Expression.Vec4ValueConstructor",
                            "args": [
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "14483664"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "15663335"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "15991027"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "15466738"
                                }
                            ]
                        },
                        {
                            "type": "com.wgslfuzz.core.Expression.Vec4ValueConstructor",
                            "args": [
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "14287076"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "12714191"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "11075765"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "9699486"
                                }
                            ]
                        },
                        {
                            "type": "com.wgslfuzz.core.Expression.Vec4ValueConstructor",
                            "args": [
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "8847501"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "8585348"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "8847492"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "9371786"
                                }
                            ]
                        },
                        {
                            "type": "com.wgslfuzz.core.Expression.Vec4ValueConstructor",
                            "args": [
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "9896083"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "10158234"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "9961627"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "9109650"
                                }
                            ]
                        },
                        {
                            "type": "com.wgslfuzz.core.Expression.Vec4ValueConstructor",
                            "args": [
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "7733377"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "6094954"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "4456528"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "3211322"
                                }
                            ]
                        },
                        {
                            "type": "com.wgslfuzz.core.Expression.Vec4ValueConstructor",
                            "args": [
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "2621483"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "2883625"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "3997747"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "5701705"
                                }
                            ]
                        },
                        {
                            "type": "com.wgslfuzz.core.Expression.Vec4ValueConstructor",
                            "args": [
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "7798887"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "9764998"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "11337890"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "12189877"
                                }
                            ]
                        },
                        {
                            "type": "com.wgslfuzz.core.Expression.Vec4ValueConstructor",
                            "args": [
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "12189884"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "11403445"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "10027172"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "8388749"
                                }
                            ]
                        },
                        {
                            "type": "com.wgslfuzz.core.Expression.Vec4ValueConstructor",
                            "args": [
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "6815860"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "5636190"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "5046353"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "5046348"
                                }
                            ]
                        },
                        {
                            "type": "com.wgslfuzz.core.Expression.Vec4ValueConstructor",
                            "args": [
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "5505104"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "6160473"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "6684770"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "6815848"
                                }
                            ]
                        },
                        {
                            "type": "com.wgslfuzz.core.Expression.Vec4ValueConstructor",
                            "args": [
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "6422630"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "5439580"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "4063305"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "2490418"
                                }
                            ]
                        },
                        {
                            "type": "com.wgslfuzz.core.Expression.Vec4ValueConstructor",
                            "args": [
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "1048602"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "131080"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "0"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "720900"
                                }
                            ]
                        },
                        {
                            "type": "com.wgslfuzz.core.Expression.Vec4ValueConstructor",
                            "args": [
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "2162709"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "4194352"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "6422609"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "8454258"
                                }
                            ]
                        },
                        {
                            "type": "com.wgslfuzz.core.Expression.Vec4ValueConstructor",
                            "args": [
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "9896077"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "10551454"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "10354849"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "9437336"
                                }
                            ]
                        },
                        {
                            "type": "com.wgslfuzz.core.Expression.Vec4ValueConstructor",
                            "args": [
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "8061062"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "6553712"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "5308506"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "4456521"
                                }
                            ]
                        },
                        {
                            "type": "com.wgslfuzz.core.Expression.Vec4ValueConstructor",
                            "args": [
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "4259905"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "4587587"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "5308491"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "6029399"
                                }
                            ]
                        },
                        {
                            "type": "com.wgslfuzz.core.Expression.Vec4ValueConstructor",
                            "args": [
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "6619233"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "6684775"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "6226020"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "5177432"
                                }
                            ]
                        },
                        {
                            "type": "com.wgslfuzz.core.Expression.Vec4ValueConstructor",
                            "args": [
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "3801157"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "2359343"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "1179674"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "720909"
                                }
                            ]
                        },
                        {
                            "type": "com.wgslfuzz.core.Expression.Vec4ValueConstructor",
                            "args": [
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "983051"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "2097174"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "3932205"
                                },
                                {
                                    "type": "com.wgslfuzz.core.Expression.IntLiteral",
                                    "text": "6160461"
                                }
                            ]
                        }
                    ]
                }
            }
        }
    }
}